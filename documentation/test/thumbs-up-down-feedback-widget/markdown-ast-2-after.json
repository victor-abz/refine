{
  "type": "root",
  "children": [
    {
      "type": "import",
      "value": "import UseOne from \"./use-one\";\nimport UseUpdate from \"./use-update\";\nimport UseList from \"./use-list\";\nimport UseListWithFilters from \"./use-list-with-filters\";\nimport MultipleDataProvider from \"./multiple-data-provider\";\nimport Authentication from \"./authentication\";\nimport OneToOne from \"./one-to-one\";\nimport OneToMany from \"./one-to-many\";\nimport ErrorHandling from \"./error-handling\";\nimport SupportedDataProviders from \"@site/src/partials/data-provider/supported-data-providers.md\";\nimport DataHooks from \"@site/src/partials/data-provider/data-hooks.md\";\nimport DataProviderInterface from \"./data-provider-interface.md\";",
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 12,
          "column": 66,
          "offset": 628
        },
        "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      }
    },
    {
      "default": false,
      "type": "export",
      "value": "export const toc = [\n\t{\n\t\tvalue: 'Fetching Data',\n\t\tid: 'fetching-data',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Updating Data',\n\t\tid: 'updating-data',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'How Refine treats data and state?',\n\t\tid: 'how-refine-treats-data-and-state',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Meta usage <GuideBadge id=\"guides-concepts/general-concepts#meta\" />',\n\t\tid: 'meta-usage-',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'GraphQL',\n\t\tid: 'graphql',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Multiple Data Providers',\n\t\tid: 'multiple-data-providers',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Handling errors',\n\t\tid: 'handling-errors',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Listing Data',\n\t\tid: 'listing-data',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Filters, Sorters and Pagination',\n\t\tid: 'filters-sorters-and-pagination',\n\t\tlevel: 3\n\t},\n\t{\n\t\tvalue: 'Relationships',\n\t\tid: 'relationships',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'One-to-One',\n\t\tid: 'one-to-one',\n\t\tlevel: 3\n\t},\n\t{\n\t\tvalue: 'One-to-Many',\n\t\tid: 'one-to-many',\n\t\tlevel: 3\n\t},\n\t{\n\t\tvalue: 'Many-to-Many',\n\t\tid: 'many-to-many',\n\t\tlevel: 3\n\t},\n\t{\n\t\tvalue: 'Authentication <GuideBadge id=\"guides-concepts/authentication/\" />',\n\t\tid: 'authentication-',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'TanStack Query <code>QueryClient</code>',\n\t\tid: 'tanstack-query-queryclient',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: '<code>dataProvider</code> interface',\n\t\tid: 'dataprovider-interface',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Supported data providers',\n\t\tid: 'supported-data-providers',\n\t\tlevel: 2\n\t},\n\t{\n\t\tvalue: 'Data hooks',\n\t\tid: 'data-hooks',\n\t\tlevel: 2\n\t}\n];"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Data is essential for any UI Application and these applications are a bridge between users and the underlying data source(s), making it possible for users to interact with data in a meaningful way.",
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 630
            },
            "end": {
              "line": 14,
              "column": 198,
              "offset": 827
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 14,
          "column": 1,
          "offset": 630
        },
        "end": {
          "line": 14,
          "column": 198,
          "offset": 827
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "To manage data, Refine needs a ",
          "position": {
            "start": {
              "line": 16,
              "column": 1,
              "offset": 829
            },
            "end": {
              "line": 16,
              "column": 32,
              "offset": 860
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "data provider",
          "position": {
            "start": {
              "line": 16,
              "column": 32,
              "offset": 860
            },
            "end": {
              "line": 16,
              "column": 47,
              "offset": 875
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", which is a function that implements the ",
          "position": {
            "start": {
              "line": 16,
              "column": 47,
              "offset": 875
            },
            "end": {
              "line": 16,
              "column": 89,
              "offset": 917
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/core/interface-references#dataprovider",
          "children": [
            {
              "type": "inlineCode",
              "value": "DataProvider",
              "position": {
                "start": {
                  "line": 16,
                  "column": 90,
                  "offset": 918
                },
                "end": {
                  "line": 16,
                  "column": 104,
                  "offset": 932
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 16,
              "column": 89,
              "offset": 917
            },
            "end": {
              "line": 16,
              "column": 151,
              "offset": 979
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " interface. It is responsible for communicating with your API and making data available to Refine applications. While you can use one of our built-in data providers, you can also easily create your own data provider matching your API.",
          "position": {
            "start": {
              "line": 16,
              "column": 151,
              "offset": 979
            },
            "end": {
              "line": 16,
              "column": 385,
              "offset": 1213
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 16,
          "column": 1,
          "offset": 829
        },
        "end": {
          "line": 16,
          "column": 385,
          "offset": 1213
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine passes relevant parameters like ",
          "position": {
            "start": {
              "line": 18,
              "column": 1,
              "offset": 1215
            },
            "end": {
              "line": 18,
              "column": 40,
              "offset": 1254
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "resource",
          "position": {
            "start": {
              "line": 18,
              "column": 40,
              "offset": 1254
            },
            "end": {
              "line": 18,
              "column": 50,
              "offset": 1264
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " name, or the ",
          "position": {
            "start": {
              "line": 18,
              "column": 50,
              "offset": 1264
            },
            "end": {
              "line": 18,
              "column": 64,
              "offset": 1278
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "id",
          "position": {
            "start": {
              "line": 18,
              "column": 64,
              "offset": 1278
            },
            "end": {
              "line": 18,
              "column": 68,
              "offset": 1282
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " of the record to your data provider, so data provider can make API calls to appropriate endpoints.",
          "position": {
            "start": {
              "line": 18,
              "column": 68,
              "offset": 1282
            },
            "end": {
              "line": 18,
              "column": 167,
              "offset": 1381
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 18,
          "column": 1,
          "offset": 1215
        },
        "end": {
          "line": 18,
          "column": 167,
          "offset": 1381
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Once you provide ",
          "position": {
            "start": {
              "line": 20,
              "column": 1,
              "offset": 1383
            },
            "end": {
              "line": 20,
              "column": 18,
              "offset": 1400
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "data provider",
          "position": {
            "start": {
              "line": 20,
              "column": 18,
              "offset": 1400
            },
            "end": {
              "line": 20,
              "column": 33,
              "offset": 1415
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " to Refine, you can utilize our data hooks (",
          "position": {
            "start": {
              "line": 20,
              "column": 33,
              "offset": 1415
            },
            "end": {
              "line": 20,
              "column": 77,
              "offset": 1459
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 20,
              "column": 77,
              "offset": 1459
            },
            "end": {
              "line": 20,
              "column": 85,
              "offset": 1467
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 20,
              "column": 85,
              "offset": 1467
            },
            "end": {
              "line": 20,
              "column": 87,
              "offset": 1469
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 20,
              "column": 87,
              "offset": 1469
            },
            "end": {
              "line": 20,
              "column": 96,
              "offset": 1478
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 20,
              "column": 96,
              "offset": 1478
            },
            "end": {
              "line": 20,
              "column": 98,
              "offset": 1480
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useUpdate",
          "position": {
            "start": {
              "line": 20,
              "column": 98,
              "offset": 1480
            },
            "end": {
              "line": 20,
              "column": 109,
              "offset": 1491
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ") to easily manage your data from various sources, including REST, GraphQL, RPC, and SOAP.",
          "position": {
            "start": {
              "line": 20,
              "column": 109,
              "offset": 1491
            },
            "end": {
              "line": 20,
              "column": 199,
              "offset": 1581
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 20,
          "column": 1,
          "offset": 1383
        },
        "end": {
          "line": 20,
          "column": 199,
          "offset": 1581
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Moreover, Refine offers support for multiple data providers, allowing you to use different data providers for different resources. For instance, you can use ",
          "position": {
            "start": {
              "line": 22,
              "column": 1,
              "offset": 1583
            },
            "end": {
              "line": 22,
              "column": 158,
              "offset": 1740
            },
            "indent": []
          }
        },
        {
          "type": "strong",
          "children": [
            {
              "type": "text",
              "value": "REST",
              "position": {
                "start": {
                  "line": 22,
                  "column": 160,
                  "offset": 1742
                },
                "end": {
                  "line": 22,
                  "column": 164,
                  "offset": 1746
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 22,
              "column": 158,
              "offset": 1740
            },
            "end": {
              "line": 22,
              "column": 166,
              "offset": 1748
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " for the ",
          "position": {
            "start": {
              "line": 22,
              "column": 166,
              "offset": 1748
            },
            "end": {
              "line": 22,
              "column": 175,
              "offset": 1757
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "posts",
          "position": {
            "start": {
              "line": 22,
              "column": 175,
              "offset": 1757
            },
            "end": {
              "line": 22,
              "column": 182,
              "offset": 1764
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " endpoint and ",
          "position": {
            "start": {
              "line": 22,
              "column": 182,
              "offset": 1764
            },
            "end": {
              "line": 22,
              "column": 196,
              "offset": 1778
            },
            "indent": []
          }
        },
        {
          "type": "strong",
          "children": [
            {
              "type": "text",
              "value": "GraphQL",
              "position": {
                "start": {
                  "line": 22,
                  "column": 198,
                  "offset": 1780
                },
                "end": {
                  "line": 22,
                  "column": 205,
                  "offset": 1787
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 22,
              "column": 196,
              "offset": 1778
            },
            "end": {
              "line": 22,
              "column": 207,
              "offset": 1789
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " for the ",
          "position": {
            "start": {
              "line": 22,
              "column": 207,
              "offset": 1789
            },
            "end": {
              "line": 22,
              "column": 216,
              "offset": 1798
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "users",
          "position": {
            "start": {
              "line": 22,
              "column": 216,
              "offset": 1798
            },
            "end": {
              "line": 22,
              "column": 223,
              "offset": 1805
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " query.",
          "position": {
            "start": {
              "line": 22,
              "column": 223,
              "offset": 1805
            },
            "end": {
              "line": 22,
              "column": 230,
              "offset": 1812
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 22,
          "column": 1,
          "offset": 1583
        },
        "end": {
          "line": 22,
          "column": 230,
          "offset": 1812
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<Image src=\"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/guides-and-concepts/providers/data-provider/api-consuming-flow.png\" />",
      "position": {
        "start": {
          "line": 24,
          "column": 1,
          "offset": 1814
        },
        "end": {
          "line": 24,
          "column": 149,
          "offset": 1962
        },
        "indent": []
      }
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Fetching Data",
          "position": {
            "start": {
              "line": 26,
              "column": 4,
              "offset": 1967
            },
            "end": {
              "line": 26,
              "column": 17,
              "offset": 1980
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 26,
          "column": 1,
          "offset": 1964
        },
        "end": {
          "line": 26,
          "column": 17,
          "offset": 1980
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "fetching-data"
        },
        "id": "fetching-data"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"fetching-data\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Imagine we want to fetch a record with the ID ",
          "position": {
            "start": {
              "line": 28,
              "column": 1,
              "offset": 1982
            },
            "end": {
              "line": 28,
              "column": 47,
              "offset": 2028
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "123",
          "position": {
            "start": {
              "line": 28,
              "column": 47,
              "offset": 2028
            },
            "end": {
              "line": 28,
              "column": 52,
              "offset": 2033
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " from the ",
          "position": {
            "start": {
              "line": 28,
              "column": 52,
              "offset": 2033
            },
            "end": {
              "line": 28,
              "column": 62,
              "offset": 2043
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "products",
          "position": {
            "start": {
              "line": 28,
              "column": 62,
              "offset": 2043
            },
            "end": {
              "line": 28,
              "column": 72,
              "offset": 2053
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " endpoint. For this, we will use the ",
          "position": {
            "start": {
              "line": 28,
              "column": 72,
              "offset": 2053
            },
            "end": {
              "line": 28,
              "column": 109,
              "offset": 2090
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 28,
              "column": 109,
              "offset": 2090
            },
            "end": {
              "line": 28,
              "column": 117,
              "offset": 2098
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook. Under the hood, it calls the ",
          "position": {
            "start": {
              "line": 28,
              "column": 117,
              "offset": 2098
            },
            "end": {
              "line": 28,
              "column": 153,
              "offset": 2134
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "dataProvider.getOne",
          "position": {
            "start": {
              "line": 28,
              "column": 153,
              "offset": 2134
            },
            "end": {
              "line": 28,
              "column": 174,
              "offset": 2155
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " method from your data provider.",
          "position": {
            "start": {
              "line": 28,
              "column": 174,
              "offset": 2155
            },
            "end": {
              "line": 28,
              "column": 206,
              "offset": 2187
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 28,
          "column": 1,
          "offset": 1982
        },
        "end": {
          "line": 28,
          "column": 206,
          "offset": 2187
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<UseOne />",
      "position": {
        "start": {
          "line": 30,
          "column": 1,
          "offset": 2189
        },
        "end": {
          "line": 30,
          "column": 11,
          "offset": 2199
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Updating Data",
          "position": {
            "start": {
              "line": 32,
              "column": 4,
              "offset": 2204
            },
            "end": {
              "line": 32,
              "column": 17,
              "offset": 2217
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 32,
          "column": 1,
          "offset": 2201
        },
        "end": {
          "line": 32,
          "column": 17,
          "offset": 2217
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "updating-data"
        },
        "id": "updating-data"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"updating-data\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Now, let's update the record with the ID ",
          "position": {
            "start": {
              "line": 34,
              "column": 1,
              "offset": 2219
            },
            "end": {
              "line": 34,
              "column": 42,
              "offset": 2260
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "124",
          "position": {
            "start": {
              "line": 34,
              "column": 42,
              "offset": 2260
            },
            "end": {
              "line": 34,
              "column": 47,
              "offset": 2265
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " from ",
          "position": {
            "start": {
              "line": 34,
              "column": 47,
              "offset": 2265
            },
            "end": {
              "line": 34,
              "column": 53,
              "offset": 2271
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "products",
          "position": {
            "start": {
              "line": 34,
              "column": 53,
              "offset": 2271
            },
            "end": {
              "line": 34,
              "column": 63,
              "offset": 2281
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " endpoint. To do this, we can use ",
          "position": {
            "start": {
              "line": 34,
              "column": 63,
              "offset": 2281
            },
            "end": {
              "line": 34,
              "column": 97,
              "offset": 2315
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useUpdate",
          "position": {
            "start": {
              "line": 34,
              "column": 97,
              "offset": 2315
            },
            "end": {
              "line": 34,
              "column": 108,
              "offset": 2326
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook, which calls ",
          "position": {
            "start": {
              "line": 34,
              "column": 108,
              "offset": 2326
            },
            "end": {
              "line": 34,
              "column": 127,
              "offset": 2345
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "dataProvider.update",
          "position": {
            "start": {
              "line": 34,
              "column": 127,
              "offset": 2345
            },
            "end": {
              "line": 34,
              "column": 148,
              "offset": 2366
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " method under the hood.",
          "position": {
            "start": {
              "line": 34,
              "column": 148,
              "offset": 2366
            },
            "end": {
              "line": 34,
              "column": 171,
              "offset": 2389
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 34,
          "column": 1,
          "offset": 2219
        },
        "end": {
          "line": 34,
          "column": 171,
          "offset": 2389
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In this example, we are updating product's price with a random value.",
          "position": {
            "start": {
              "line": 36,
              "column": 1,
              "offset": 2391
            },
            "end": {
              "line": 36,
              "column": 70,
              "offset": 2460
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 36,
          "column": 1,
          "offset": 2391
        },
        "end": {
          "line": 36,
          "column": 70,
          "offset": 2460
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<UseUpdate />",
      "position": {
        "start": {
          "line": 38,
          "column": 1,
          "offset": 2462
        },
        "end": {
          "line": 38,
          "column": 14,
          "offset": 2475
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine offers various data hooks for CRUD operations, you can see the list of these hooks below:",
          "position": {
            "start": {
              "line": 40,
              "column": 1,
              "offset": 2477
            },
            "end": {
              "line": 40,
              "column": 97,
              "offset": 2573
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 40,
          "column": 1,
          "offset": 2477
        },
        "end": {
          "line": 40,
          "column": 97,
          "offset": 2573
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<DataHooks />",
      "position": {
        "start": {
          "line": 42,
          "column": 1,
          "offset": 2575
        },
        "end": {
          "line": 42,
          "column": 14,
          "offset": 2588
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "How Refine treats data and state?",
          "position": {
            "start": {
              "line": 44,
              "column": 4,
              "offset": 2593
            },
            "end": {
              "line": 44,
              "column": 37,
              "offset": 2626
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 44,
          "column": 1,
          "offset": 2590
        },
        "end": {
          "line": 44,
          "column": 37,
          "offset": 2626
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "how-refine-treats-data-and-state"
        },
        "id": "how-refine-treats-data-and-state"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"how-refine-treats-data-and-state\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Data hooks uses ",
          "position": {
            "start": {
              "line": 46,
              "column": 1,
              "offset": 2628
            },
            "end": {
              "line": 46,
              "column": 17,
              "offset": 2644
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "https://tanstack.com/query",
          "children": [
            {
              "type": "text",
              "value": "TanStack Query",
              "position": {
                "start": {
                  "line": 46,
                  "column": 18,
                  "offset": 2645
                },
                "end": {
                  "line": 46,
                  "column": 32,
                  "offset": 2659
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 46,
              "column": 17,
              "offset": 2644
            },
            "end": {
              "line": 46,
              "column": 61,
              "offset": 2688
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " under the hood. It takes care of managing the state for you. It provides ",
          "position": {
            "start": {
              "line": 46,
              "column": 61,
              "offset": 2688
            },
            "end": {
              "line": 46,
              "column": 135,
              "offset": 2762
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "data",
          "position": {
            "start": {
              "line": 46,
              "column": 135,
              "offset": 2762
            },
            "end": {
              "line": 46,
              "column": 141,
              "offset": 2768
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 46,
              "column": 141,
              "offset": 2768
            },
            "end": {
              "line": 46,
              "column": 143,
              "offset": 2770
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "isLoading",
          "position": {
            "start": {
              "line": 46,
              "column": 143,
              "offset": 2770
            },
            "end": {
              "line": 46,
              "column": 154,
              "offset": 2781
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", and ",
          "position": {
            "start": {
              "line": 46,
              "column": 154,
              "offset": 2781
            },
            "end": {
              "line": 46,
              "column": 160,
              "offset": 2787
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "error",
          "position": {
            "start": {
              "line": 46,
              "column": 160,
              "offset": 2787
            },
            "end": {
              "line": 46,
              "column": 167,
              "offset": 2794
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " states to help you handle loading, success, and error scenarios gracefully.",
          "position": {
            "start": {
              "line": 46,
              "column": 167,
              "offset": 2794
            },
            "end": {
              "line": 46,
              "column": 243,
              "offset": 2870
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 46,
          "column": 1,
          "offset": 2628
        },
        "end": {
          "line": 46,
          "column": 243,
          "offset": 2870
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine treats data and state in a structured and efficient manner, providing developers with powerful tools to manage data seamlessly within their applications. Here are some key aspects of how Refine treats data and state:",
          "position": {
            "start": {
              "line": 48,
              "column": 1,
              "offset": 2872
            },
            "end": {
              "line": 48,
              "column": 224,
              "offset": 3095
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 48,
          "column": 1,
          "offset": 2872
        },
        "end": {
          "line": 48,
          "column": 224,
          "offset": 3095
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": true,
      "start": 1,
      "spread": true,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Resource-Based Approach:",
                      "position": {
                        "start": {
                          "line": 50,
                          "column": 6,
                          "offset": 3102
                        },
                        "end": {
                          "line": 50,
                          "column": 30,
                          "offset": 3126
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 50,
                      "column": 4,
                      "offset": 3100
                    },
                    "end": {
                      "line": 50,
                      "column": 32,
                      "offset": 3128
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Organizes data around resources, which are essentially models representing different data entities or API endpoints. These resources help structure your application's data management.",
                  "position": {
                    "start": {
                      "line": 50,
                      "column": 32,
                      "offset": 3128
                    },
                    "end": {
                      "line": 50,
                      "column": 216,
                      "offset": 3312
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 50,
                  "column": 4,
                  "offset": 3100
                },
                "end": {
                  "line": 50,
                  "column": 216,
                  "offset": 3312
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 50,
              "column": 1,
              "offset": 3097
            },
            "end": {
              "line": 51,
              "column": 1,
              "offset": 3313
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Invalidation:",
                      "position": {
                        "start": {
                          "line": 52,
                          "column": 6,
                          "offset": 3319
                        },
                        "end": {
                          "line": 52,
                          "column": 19,
                          "offset": 3332
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 52,
                      "column": 4,
                      "offset": 3317
                    },
                    "end": {
                      "line": 52,
                      "column": 21,
                      "offset": 3334
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Automatically invalidates data after a successful mutation (e.g., creating, updating, or deleting a resource), ensuring that the UI is updated with the latest data.",
                  "position": {
                    "start": {
                      "line": 52,
                      "column": 21,
                      "offset": 3334
                    },
                    "end": {
                      "line": 52,
                      "column": 186,
                      "offset": 3499
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 52,
                  "column": 4,
                  "offset": 3317
                },
                "end": {
                  "line": 52,
                  "column": 186,
                  "offset": 3499
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 52,
              "column": 1,
              "offset": 3314
            },
            "end": {
              "line": 53,
              "column": 1,
              "offset": 3500
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Caching:",
                      "position": {
                        "start": {
                          "line": 54,
                          "column": 6,
                          "offset": 3506
                        },
                        "end": {
                          "line": 54,
                          "column": 14,
                          "offset": 3514
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 54,
                      "column": 4,
                      "offset": 3504
                    },
                    "end": {
                      "line": 54,
                      "column": 16,
                      "offset": 3516
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Caches data to improve performance and deduplicates API calls.",
                  "position": {
                    "start": {
                      "line": 54,
                      "column": 16,
                      "offset": 3516
                    },
                    "end": {
                      "line": 54,
                      "column": 79,
                      "offset": 3579
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 54,
                  "column": 4,
                  "offset": 3504
                },
                "end": {
                  "line": 54,
                  "column": 79,
                  "offset": 3579
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 54,
              "column": 1,
              "offset": 3501
            },
            "end": {
              "line": 55,
              "column": 1,
              "offset": 3580
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Optimistic Updates:",
                      "position": {
                        "start": {
                          "line": 56,
                          "column": 6,
                          "offset": 3586
                        },
                        "end": {
                          "line": 56,
                          "column": 25,
                          "offset": 3605
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 56,
                      "column": 4,
                      "offset": 3584
                    },
                    "end": {
                      "line": 56,
                      "column": 27,
                      "offset": 3607
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Supports optimistic updates, which means it will update the UI optimistically before the actual API call is complete. This enhances the user experience by reducing perceived latency.",
                  "position": {
                    "start": {
                      "line": 56,
                      "column": 27,
                      "offset": 3607
                    },
                    "end": {
                      "line": 56,
                      "column": 210,
                      "offset": 3790
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 56,
                  "column": 4,
                  "offset": 3584
                },
                "end": {
                  "line": 56,
                  "column": 210,
                  "offset": 3790
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 56,
              "column": 1,
              "offset": 3581
            },
            "end": {
              "line": 57,
              "column": 1,
              "offset": 3791
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Hooks for CRUD Operations:",
                      "position": {
                        "start": {
                          "line": 58,
                          "column": 6,
                          "offset": 3797
                        },
                        "end": {
                          "line": 58,
                          "column": 32,
                          "offset": 3823
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 4,
                      "offset": 3795
                    },
                    "end": {
                      "line": 58,
                      "column": 34,
                      "offset": 3825
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Offers a collection of hooks that align with common data operations like listing, creating, updating, and deleting data (",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 34,
                      "offset": 3825
                    },
                    "end": {
                      "line": 58,
                      "column": 156,
                      "offset": 3947
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useList",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 156,
                      "offset": 3947
                    },
                    "end": {
                      "line": 58,
                      "column": 165,
                      "offset": 3956
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 165,
                      "offset": 3956
                    },
                    "end": {
                      "line": 58,
                      "column": 167,
                      "offset": 3958
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useCreate",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 167,
                      "offset": 3958
                    },
                    "end": {
                      "line": 58,
                      "column": 178,
                      "offset": 3969
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 178,
                      "offset": 3969
                    },
                    "end": {
                      "line": 58,
                      "column": 180,
                      "offset": 3971
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useUpdate",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 180,
                      "offset": 3971
                    },
                    "end": {
                      "line": 58,
                      "column": 191,
                      "offset": 3982
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 191,
                      "offset": 3982
                    },
                    "end": {
                      "line": 58,
                      "column": 193,
                      "offset": 3984
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useDelete",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 193,
                      "offset": 3984
                    },
                    "end": {
                      "line": 58,
                      "column": 204,
                      "offset": 3995
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "). In addition to these basic hooks, Refine provides advanced hooks that are a composition of these fundamental ones for handling more complex tasks (",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 204,
                      "offset": 3995
                    },
                    "end": {
                      "line": 58,
                      "column": 354,
                      "offset": 4145
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useForm",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 354,
                      "offset": 4145
                    },
                    "end": {
                      "line": 58,
                      "column": 363,
                      "offset": 4154
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 363,
                      "offset": 4154
                    },
                    "end": {
                      "line": 58,
                      "column": 365,
                      "offset": 4156
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useTable",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 365,
                      "offset": 4156
                    },
                    "end": {
                      "line": 58,
                      "column": 375,
                      "offset": 4166
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 375,
                      "offset": 4166
                    },
                    "end": {
                      "line": 58,
                      "column": 377,
                      "offset": 4168
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "useSelect",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 377,
                      "offset": 4168
                    },
                    "end": {
                      "line": 58,
                      "column": 388,
                      "offset": 4179
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ").",
                  "position": {
                    "start": {
                      "line": 58,
                      "column": 388,
                      "offset": 4179
                    },
                    "end": {
                      "line": 58,
                      "column": 390,
                      "offset": 4181
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 58,
                  "column": 4,
                  "offset": 3795
                },
                "end": {
                  "line": 58,
                  "column": 390,
                  "offset": 4181
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 58,
              "column": 1,
              "offset": 3792
            },
            "end": {
              "line": 59,
              "column": 1,
              "offset": 4182
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Integration with UI Libraries:",
                      "position": {
                        "start": {
                          "line": 60,
                          "column": 6,
                          "offset": 4188
                        },
                        "end": {
                          "line": 60,
                          "column": 36,
                          "offset": 4218
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 60,
                      "column": 4,
                      "offset": 4186
                    },
                    "end": {
                      "line": 60,
                      "column": 38,
                      "offset": 4220
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " Works seamlessly with popular UI libraries. It provides a structured approach to represent data within these libraries.",
                  "position": {
                    "start": {
                      "line": 60,
                      "column": 38,
                      "offset": 4220
                    },
                    "end": {
                      "line": 60,
                      "column": 158,
                      "offset": 4340
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 60,
                  "column": 4,
                  "offset": 4186
                },
                "end": {
                  "line": 60,
                  "column": 158,
                  "offset": 4340
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 60,
              "column": 1,
              "offset": 4183
            },
            "end": {
              "line": 61,
              "column": 1,
              "offset": 4341
            },
            "indent": [1]
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Realtime Updates",
                      "position": {
                        "start": {
                          "line": 62,
                          "column": 6,
                          "offset": 4347
                        },
                        "end": {
                          "line": 62,
                          "column": 22,
                          "offset": 4363
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 62,
                      "column": 4,
                      "offset": 4345
                    },
                    "end": {
                      "line": 62,
                      "column": 24,
                      "offset": 4365
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": Allowing your application to reflect changes in data as they occur.",
                  "position": {
                    "start": {
                      "line": 62,
                      "column": 24,
                      "offset": 4365
                    },
                    "end": {
                      "line": 62,
                      "column": 93,
                      "offset": 4434
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 62,
                  "column": 4,
                  "offset": 4345
                },
                "end": {
                  "line": 62,
                  "column": 93,
                  "offset": 4434
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 62,
              "column": 1,
              "offset": 4342
            },
            "end": {
              "line": 62,
              "column": 93,
              "offset": 4434
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 50,
          "column": 1,
          "offset": 3097
        },
        "end": {
          "line": 62,
          "column": 93,
          "offset": 4434
        },
        "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Meta usage ",
          "position": {
            "start": {
              "line": 64,
              "column": 4,
              "offset": 4439
            },
            "end": {
              "line": 64,
              "column": 15,
              "offset": 4450
            },
            "indent": []
          }
        },
        {
          "type": "jsx",
          "value": "<GuideBadge id=\"guides-concepts/general-concepts#meta\" />",
          "position": {
            "start": {
              "line": 64,
              "column": 15,
              "offset": 4450
            },
            "end": {
              "line": 64,
              "column": 72,
              "offset": 4507
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 64,
          "column": 1,
          "offset": 4436
        },
        "end": {
          "line": 64,
          "column": 72,
          "offset": 4507
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "meta-usage-"
        },
        "id": "meta-usage-"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"meta-usage-\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "linkReference",
          "identifier": "meta",
          "label": "meta",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "meta",
              "position": {
                "start": {
                  "line": 66,
                  "column": 2,
                  "offset": 4510
                },
                "end": {
                  "line": 66,
                  "column": 8,
                  "offset": 4516
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 66,
              "column": 1,
              "offset": 4509
            },
            "end": {
              "line": 66,
              "column": 15,
              "offset": 4523
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " is a special property that can be used to pass additional information to your data provider methods through data hooks like ",
          "position": {
            "start": {
              "line": 66,
              "column": 15,
              "offset": 4523
            },
            "end": {
              "line": 66,
              "column": 140,
              "offset": 4648
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 66,
              "column": 140,
              "offset": 4648
            },
            "end": {
              "line": 66,
              "column": 148,
              "offset": 4656
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 66,
              "column": 148,
              "offset": 4656
            },
            "end": {
              "line": 66,
              "column": 150,
              "offset": 4658
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 66,
              "column": 150,
              "offset": 4658
            },
            "end": {
              "line": 66,
              "column": 159,
              "offset": 4667
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 66,
              "column": 159,
              "offset": 4667
            },
            "end": {
              "line": 66,
              "column": 161,
              "offset": 4669
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useForm",
          "position": {
            "start": {
              "line": 66,
              "column": 161,
              "offset": 4669
            },
            "end": {
              "line": 66,
              "column": 170,
              "offset": 4678
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " from anywhere across your application.",
          "position": {
            "start": {
              "line": 66,
              "column": 170,
              "offset": 4678
            },
            "end": {
              "line": 66,
              "column": 209,
              "offset": 4717
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 66,
          "column": 1,
          "offset": 4509
        },
        "end": {
          "line": 66,
          "column": 209,
          "offset": 4717
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "The capabilities of ",
          "position": {
            "start": {
              "line": 68,
              "column": 1,
              "offset": 4719
            },
            "end": {
              "line": 68,
              "column": 21,
              "offset": 4739
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "meta",
          "position": {
            "start": {
              "line": 68,
              "column": 21,
              "offset": 4739
            },
            "end": {
              "line": 68,
              "column": 27,
              "offset": 4745
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " properties depend on your data provider's implementation. While some may use additional features through ",
          "position": {
            "start": {
              "line": 68,
              "column": 27,
              "offset": 4745
            },
            "end": {
              "line": 68,
              "column": 133,
              "offset": 4851
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "meta",
          "position": {
            "start": {
              "line": 68,
              "column": 133,
              "offset": 4851
            },
            "end": {
              "line": 68,
              "column": 139,
              "offset": 4857
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", others may not use them or follow a different approach.",
          "position": {
            "start": {
              "line": 68,
              "column": 139,
              "offset": 4857
            },
            "end": {
              "line": 68,
              "column": 196,
              "offset": 4914
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 68,
          "column": 1,
          "offset": 4719
        },
        "end": {
          "line": 68,
          "column": 196,
          "offset": 4914
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Here are some examples of ",
          "position": {
            "start": {
              "line": 70,
              "column": 1,
              "offset": 4916
            },
            "end": {
              "line": 70,
              "column": 27,
              "offset": 4942
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "meta",
          "position": {
            "start": {
              "line": 70,
              "column": 27,
              "offset": 4942
            },
            "end": {
              "line": 70,
              "column": 33,
              "offset": 4948
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " usage:",
          "position": {
            "start": {
              "line": 70,
              "column": 33,
              "offset": 4948
            },
            "end": {
              "line": 70,
              "column": 40,
              "offset": 4955
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 70,
          "column": 1,
          "offset": 4916
        },
        "end": {
          "line": 70,
          "column": 40,
          "offset": 4955
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Passing additional headers or parameters to the request.",
                  "position": {
                    "start": {
                      "line": 72,
                      "column": 3,
                      "offset": 4959
                    },
                    "end": {
                      "line": 72,
                      "column": 59,
                      "offset": 5015
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 72,
                  "column": 3,
                  "offset": 4959
                },
                "end": {
                  "line": 72,
                  "column": 59,
                  "offset": 5015
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 72,
              "column": 1,
              "offset": 4957
            },
            "end": {
              "line": 72,
              "column": 59,
              "offset": 5015
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Generate GraphQL queries.",
                  "position": {
                    "start": {
                      "line": 73,
                      "column": 3,
                      "offset": 5018
                    },
                    "end": {
                      "line": 73,
                      "column": 28,
                      "offset": 5043
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 73,
                  "column": 3,
                  "offset": 5018
                },
                "end": {
                  "line": 73,
                  "column": 28,
                  "offset": 5043
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 73,
              "column": 1,
              "offset": 5016
            },
            "end": {
              "line": 73,
              "column": 28,
              "offset": 5043
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Multi-tenancy support (passing the tenant id to the request).",
                  "position": {
                    "start": {
                      "line": 74,
                      "column": 3,
                      "offset": 5046
                    },
                    "end": {
                      "line": 74,
                      "column": 64,
                      "offset": 5107
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 74,
                  "column": 3,
                  "offset": 5046
                },
                "end": {
                  "line": 74,
                  "column": 64,
                  "offset": 5107
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 74,
              "column": 1,
              "offset": 5044
            },
            "end": {
              "line": 74,
              "column": 64,
              "offset": 5107
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 72,
          "column": 1,
          "offset": 4957
        },
        "end": {
          "line": 74,
          "column": 64,
          "offset": 5107
        },
        "indent": [1, 1]
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In the example below, we are passing ",
          "position": {
            "start": {
              "line": 76,
              "column": 1,
              "offset": 5109
            },
            "end": {
              "line": 76,
              "column": 38,
              "offset": 5146
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "meta.foo",
          "position": {
            "start": {
              "line": 76,
              "column": 38,
              "offset": 5146
            },
            "end": {
              "line": 76,
              "column": 48,
              "offset": 5156
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " property to the ",
          "position": {
            "start": {
              "line": 76,
              "column": 48,
              "offset": 5156
            },
            "end": {
              "line": 76,
              "column": 65,
              "offset": 5173
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 76,
              "column": 65,
              "offset": 5173
            },
            "end": {
              "line": 76,
              "column": 73,
              "offset": 5181
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook. Then, we are using this property to pass additional headers to the request.",
          "position": {
            "start": {
              "line": 76,
              "column": 73,
              "offset": 5181
            },
            "end": {
              "line": 76,
              "column": 155,
              "offset": 5263
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 76,
          "column": 1,
          "offset": 5109
        },
        "end": {
          "line": 76,
          "column": 155,
          "offset": 5263
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "tsx",
      "meta": null,
      "value": "import { DataProvider, useOne } from \"@refinedev/core\";\n\nuseOne({\n    resource: \"products\",\n    id: 1,\n    meta: {\n        foo: \"bar\",\n    },\n});\n\nexport const dataProvider = (apiUrl: string): DataProvider => ({\n    getOne: async ({ resource, id, meta }) => {\n        const response = await fetch(`${apiUrl}/${resource}/${id}`, {\n            headers: {\n                \"x-foo\": meta.foo,\n            },\n        });\n\n        const data = await response.json();\n\n        return {\n            data,\n        };\n    },\n    ...\n});",
      "position": {
        "start": {
          "line": 78,
          "column": 1,
          "offset": 5265
        },
        "end": {
          "line": 105,
          "column": 4,
          "offset": 5801
        },
        "indent": [
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1
        ]
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "GraphQL",
          "position": {
            "start": {
              "line": 107,
              "column": 4,
              "offset": 5806
            },
            "end": {
              "line": 107,
              "column": 11,
              "offset": 5813
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 107,
          "column": 1,
          "offset": 5803
        },
        "end": {
          "line": 107,
          "column": 11,
          "offset": 5813
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "graphql"
        },
        "id": "graphql"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"graphql\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine's ",
          "position": {
            "start": {
              "line": 109,
              "column": 1,
              "offset": 5815
            },
            "end": {
              "line": 109,
              "column": 10,
              "offset": 5824
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "meta",
          "position": {
            "start": {
              "line": 109,
              "column": 10,
              "offset": 5824
            },
            "end": {
              "line": 109,
              "column": 16,
              "offset": 5830
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " property has ",
          "position": {
            "start": {
              "line": 109,
              "column": 16,
              "offset": 5830
            },
            "end": {
              "line": 109,
              "column": 30,
              "offset": 5844
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "gqlQuery",
          "position": {
            "start": {
              "line": 109,
              "column": 30,
              "offset": 5844
            },
            "end": {
              "line": 109,
              "column": 40,
              "offset": 5854
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " and ",
          "position": {
            "start": {
              "line": 109,
              "column": 40,
              "offset": 5854
            },
            "end": {
              "line": 109,
              "column": 45,
              "offset": 5859
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "gqlMutation",
          "position": {
            "start": {
              "line": 109,
              "column": 45,
              "offset": 5859
            },
            "end": {
              "line": 109,
              "column": 58,
              "offset": 5872
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " fields, which accepts ",
          "position": {
            "start": {
              "line": 109,
              "column": 58,
              "offset": 5872
            },
            "end": {
              "line": 109,
              "column": 81,
              "offset": 5895
            },
            "indent": []
          }
        },
        {
          "type": "strong",
          "children": [
            {
              "type": "text",
              "value": "GraphQL",
              "position": {
                "start": {
                  "line": 109,
                  "column": 83,
                  "offset": 5897
                },
                "end": {
                  "line": 109,
                  "column": 90,
                  "offset": 5904
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 109,
              "column": 81,
              "offset": 5895
            },
            "end": {
              "line": 109,
              "column": 92,
              "offset": 5906
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " operation as ",
          "position": {
            "start": {
              "line": 109,
              "column": 92,
              "offset": 5906
            },
            "end": {
              "line": 109,
              "column": 106,
              "offset": 5920
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "graphql",
          "position": {
            "start": {
              "line": 109,
              "column": 106,
              "offset": 5920
            },
            "end": {
              "line": 109,
              "column": 115,
              "offset": 5929
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": "'s ",
          "position": {
            "start": {
              "line": 109,
              "column": 115,
              "offset": 5929
            },
            "end": {
              "line": 109,
              "column": 118,
              "offset": 5932
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "https://graphql.org/graphql-js/type/#documentnode",
          "children": [
            {
              "type": "inlineCode",
              "value": "DocumentNode",
              "position": {
                "start": {
                  "line": 109,
                  "column": 119,
                  "offset": 5933
                },
                "end": {
                  "line": 109,
                  "column": 133,
                  "offset": 5947
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 109,
              "column": 118,
              "offset": 5932
            },
            "end": {
              "line": 109,
              "column": 185,
              "offset": 5999
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " type.",
          "position": {
            "start": {
              "line": 109,
              "column": 185,
              "offset": 5999
            },
            "end": {
              "line": 109,
              "column": 191,
              "offset": 6005
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 109,
          "column": 1,
          "offset": 5815
        },
        "end": {
          "line": 109,
          "column": 191,
          "offset": 6005
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "You can use these fields to pass ",
          "position": {
            "start": {
              "line": 111,
              "column": 1,
              "offset": 6007
            },
            "end": {
              "line": 111,
              "column": 34,
              "offset": 6040
            },
            "indent": []
          }
        },
        {
          "type": "strong",
          "children": [
            {
              "type": "text",
              "value": "GraphQL",
              "position": {
                "start": {
                  "line": 111,
                  "column": 36,
                  "offset": 6042
                },
                "end": {
                  "line": 111,
                  "column": 43,
                  "offset": 6049
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 111,
              "column": 34,
              "offset": 6040
            },
            "end": {
              "line": 111,
              "column": 45,
              "offset": 6051
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " queries or mutations to your data provider methods through data hooks like ",
          "position": {
            "start": {
              "line": 111,
              "column": 45,
              "offset": 6051
            },
            "end": {
              "line": 111,
              "column": 121,
              "offset": 6127
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 111,
              "column": 121,
              "offset": 6127
            },
            "end": {
              "line": 111,
              "column": 129,
              "offset": 6135
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 111,
              "column": 129,
              "offset": 6135
            },
            "end": {
              "line": 111,
              "column": 131,
              "offset": 6137
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 111,
              "column": 131,
              "offset": 6137
            },
            "end": {
              "line": 111,
              "column": 140,
              "offset": 6146
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 111,
              "column": 140,
              "offset": 6146
            },
            "end": {
              "line": 111,
              "column": 142,
              "offset": 6148
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useForm",
          "position": {
            "start": {
              "line": 111,
              "column": 142,
              "offset": 6148
            },
            "end": {
              "line": 111,
              "column": 151,
              "offset": 6157
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " from anywhere across your application.",
          "position": {
            "start": {
              "line": 111,
              "column": 151,
              "offset": 6157
            },
            "end": {
              "line": 111,
              "column": 190,
              "offset": 6196
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 111,
          "column": 1,
          "offset": 6007
        },
        "end": {
          "line": 111,
          "column": 190,
          "offset": 6196
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Easiest way to generate GraphQL queries is to use ",
          "position": {
            "start": {
              "line": 113,
              "column": 1,
              "offset": 6198
            },
            "end": {
              "line": 113,
              "column": 51,
              "offset": 6248
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "https://www.npmjs.com/package/graphql-tag",
          "children": [
            {
              "type": "text",
              "value": "graphql-tag",
              "position": {
                "start": {
                  "line": 113,
                  "column": 52,
                  "offset": 6249
                },
                "end": {
                  "line": 113,
                  "column": 63,
                  "offset": 6260
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 113,
              "column": 51,
              "offset": 6248
            },
            "end": {
              "line": 113,
              "column": 107,
              "offset": 6304
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " package.",
          "position": {
            "start": {
              "line": 113,
              "column": 107,
              "offset": 6304
            },
            "end": {
              "line": 113,
              "column": 116,
              "offset": 6313
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 113,
          "column": 1,
          "offset": 6198
        },
        "end": {
          "line": 113,
          "column": 116,
          "offset": 6313
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "tsx",
      "meta": null,
      "value": "import gql from \"graphql-tag\";\nimport { useOne, useUpdate } from \"@refinedev/core\";\n\nconst GET_PRODUCT_QUERY = gql`\n  query GetProduct($id: ID!) {\n    product(id: $id) {\n      id\n      title\n      category {\n        title\n      }\n    }\n  }\n`;\n\nuseOne({\n  resource: \"products\",\n  id: 1,\n  meta: {\n    gqlQuery: GET_PRODUCT_QUERY,\n  },\n});\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UpdateOneProduct($id: ID!, $input: UpdateOneProductInput!) {\n    updateOneProduct(id: $id, input: $input) {\n      id\n      title\n      category {\n        title\n      }\n    }\n  }\n`;\n\nconst { mutate } = useUpdate();\n\nmutate({\n  resource: \"products\",\n  id: 1,\n  values: {\n    title: \"New Title\",\n  },\n  meta: {\n    gqlMutation: UPDATE_PRODUCT_MUTATION,\n  },\n});",
      "position": {
        "start": {
          "line": 115,
          "column": 1,
          "offset": 6315
        },
        "end": {
          "line": 163,
          "column": 4,
          "offset": 7071
        },
        "indent": [
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1
        ]
      }
    },
    {
      "type": "admonitionHTML",
      "data": {
        "hName": "admonition",
        "hProperties": {
          "type": "simple"
        }
      },
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "Nest.js Query",
                  "position": {
                    "start": {
                      "line": 166,
                      "column": 3,
                      "offset": 7085
                    },
                    "end": {
                      "line": 166,
                      "column": 16,
                      "offset": 7098
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 166,
                  "column": 1,
                  "offset": 7083
                },
                "end": {
                  "line": 166,
                  "column": 18,
                  "offset": 7100
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " data provider implements full support for ",
              "position": {
                "start": {
                  "line": 166,
                  "column": 18,
                  "offset": 7100
                },
                "end": {
                  "line": 166,
                  "column": 61,
                  "offset": 7143
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "gqlQuery",
              "position": {
                "start": {
                  "line": 166,
                  "column": 61,
                  "offset": 7143
                },
                "end": {
                  "line": 166,
                  "column": 71,
                  "offset": 7153
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 166,
                  "column": 71,
                  "offset": 7153
                },
                "end": {
                  "line": 166,
                  "column": 76,
                  "offset": 7158
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "gqlMutation",
              "position": {
                "start": {
                  "line": 166,
                  "column": 76,
                  "offset": 7158
                },
                "end": {
                  "line": 166,
                  "column": 89,
                  "offset": 7171
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " fields.",
              "position": {
                "start": {
                  "line": 166,
                  "column": 89,
                  "offset": 7171
                },
                "end": {
                  "line": 166,
                  "column": 97,
                  "offset": 7179
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 166,
              "column": 1,
              "offset": 7083
            },
            "end": {
              "line": 166,
              "column": 97,
              "offset": 7179
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "See ",
              "position": {
                "start": {
                  "line": 168,
                  "column": 1,
                  "offset": 7181
                },
                "end": {
                  "line": 168,
                  "column": 5,
                  "offset": 7185
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "/docs/data/packages/nestjs-query",
              "children": [
                {
                  "type": "text",
                  "value": "Nest.js Query Docs",
                  "position": {
                    "start": {
                      "line": 168,
                      "column": 6,
                      "offset": 7186
                    },
                    "end": {
                      "line": 168,
                      "column": 24,
                      "offset": 7204
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 168,
                  "column": 5,
                  "offset": 7185
                },
                "end": {
                  "line": 168,
                  "column": 59,
                  "offset": 7239
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " for more information.",
              "position": {
                "start": {
                  "line": 168,
                  "column": 59,
                  "offset": 7239
                },
                "end": {
                  "line": 168,
                  "column": 81,
                  "offset": 7261
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 168,
              "column": 1,
              "offset": 7181
            },
            "end": {
              "line": 168,
              "column": 81,
              "offset": 7261
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 165,
          "column": 1,
          "offset": 7073
        },
        "end": {
          "line": 171,
          "column": 4,
          "offset": 7267
        },
        "indent": [1, 1, 1, 1, 1, 1]
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Also, you can check Refine's built-in ",
          "position": {
            "start": {
              "line": 173,
              "column": 1,
              "offset": 7269
            },
            "end": {
              "line": 173,
              "column": 39,
              "offset": 7307
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "#supported-data-providers",
          "children": [
            {
              "type": "text",
              "value": "GraphQL data providers",
              "position": {
                "start": {
                  "line": 173,
                  "column": 40,
                  "offset": 7308
                },
                "end": {
                  "line": 173,
                  "column": 62,
                  "offset": 7330
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 173,
              "column": 39,
              "offset": 7307
            },
            "end": {
              "line": 173,
              "column": 90,
              "offset": 7358
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " to handle communication with your GraphQL APIs or use them as a starting point.",
          "position": {
            "start": {
              "line": 173,
              "column": 90,
              "offset": 7358
            },
            "end": {
              "line": 173,
              "column": 170,
              "offset": 7438
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 173,
          "column": 1,
          "offset": 7269
        },
        "end": {
          "line": 173,
          "column": 170,
          "offset": 7438
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Multiple Data Providers",
          "position": {
            "start": {
              "line": 175,
              "column": 4,
              "offset": 7443
            },
            "end": {
              "line": 175,
              "column": 27,
              "offset": 7466
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 175,
          "column": 1,
          "offset": 7440
        },
        "end": {
          "line": 175,
          "column": 27,
          "offset": 7466
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "multiple-data-providers"
        },
        "id": "multiple-data-providers"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"multiple-data-providers\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Using multiple data providers in Refine allows you to work with various APIs or data sources in a single application. You might use different data providers for different parts of your app.",
          "position": {
            "start": {
              "line": 177,
              "column": 1,
              "offset": 7468
            },
            "end": {
              "line": 177,
              "column": 190,
              "offset": 7657
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 177,
          "column": 1,
          "offset": 7468
        },
        "end": {
          "line": 177,
          "column": 190,
          "offset": 7657
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Each data provider can have its own configuration, making it easier to manage complex data scenarios within a single application.\nThis flexibility is handy when dealing with various data structures and APIs.",
          "position": {
            "start": {
              "line": 179,
              "column": 1,
              "offset": 7659
            },
            "end": {
              "line": 180,
              "column": 78,
              "offset": 7866
            },
            "indent": [1]
          }
        }
      ],
      "position": {
        "start": {
          "line": 179,
          "column": 1,
          "offset": 7659
        },
        "end": {
          "line": 180,
          "column": 78,
          "offset": 7866
        },
        "indent": [1]
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For example, we want to fetch:",
          "position": {
            "start": {
              "line": 182,
              "column": 1,
              "offset": 7868
            },
            "end": {
              "line": 182,
              "column": 31,
              "offset": 7898
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 182,
          "column": 1,
          "offset": 7868
        },
        "end": {
          "line": 182,
          "column": 31,
          "offset": 7898
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "products",
                  "position": {
                    "start": {
                      "line": 184,
                      "column": 3,
                      "offset": 7902
                    },
                    "end": {
                      "line": 184,
                      "column": 13,
                      "offset": 7912
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " from ",
                  "position": {
                    "start": {
                      "line": 184,
                      "column": 13,
                      "offset": 7912
                    },
                    "end": {
                      "line": 184,
                      "column": 19,
                      "offset": 7918
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "https://api.finefoods.refine.dev",
                  "position": {
                    "start": {
                      "line": 184,
                      "column": 19,
                      "offset": 7918
                    },
                    "end": {
                      "line": 184,
                      "column": 53,
                      "offset": 7952
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 184,
                  "column": 3,
                  "offset": 7902
                },
                "end": {
                  "line": 184,
                  "column": 53,
                  "offset": 7952
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 184,
              "column": 1,
              "offset": 7900
            },
            "end": {
              "line": 184,
              "column": 53,
              "offset": 7952
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "user",
                  "position": {
                    "start": {
                      "line": 185,
                      "column": 3,
                      "offset": 7955
                    },
                    "end": {
                      "line": 185,
                      "column": 9,
                      "offset": 7961
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " from ",
                  "position": {
                    "start": {
                      "line": 185,
                      "column": 9,
                      "offset": 7961
                    },
                    "end": {
                      "line": 185,
                      "column": 15,
                      "offset": 7967
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "https://api.fake-rest.refine.dev",
                  "position": {
                    "start": {
                      "line": 185,
                      "column": 15,
                      "offset": 7967
                    },
                    "end": {
                      "line": 185,
                      "column": 49,
                      "offset": 8001
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 185,
                      "column": 49,
                      "offset": 8001
                    },
                    "end": {
                      "line": 185,
                      "column": 50,
                      "offset": 8002
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 185,
                  "column": 3,
                  "offset": 7955
                },
                "end": {
                  "line": 185,
                  "column": 50,
                  "offset": 8002
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 185,
              "column": 1,
              "offset": 7953
            },
            "end": {
              "line": 185,
              "column": 50,
              "offset": 8002
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 184,
          "column": 1,
          "offset": 7900
        },
        "end": {
          "line": 185,
          "column": 50,
          "offset": 8002
        },
        "indent": [1]
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "As you can see the example below:",
          "position": {
            "start": {
              "line": 187,
              "column": 1,
              "offset": 8004
            },
            "end": {
              "line": 187,
              "column": 34,
              "offset": 8037
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 187,
          "column": 1,
          "offset": 8004
        },
        "end": {
          "line": 187,
          "column": 34,
          "offset": 8037
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "We are defining multiple data providers in ",
                  "position": {
                    "start": {
                      "line": 189,
                      "column": 3,
                      "offset": 8041
                    },
                    "end": {
                      "line": 189,
                      "column": 46,
                      "offset": 8084
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "App.tsx",
                  "position": {
                    "start": {
                      "line": 189,
                      "column": 46,
                      "offset": 8084
                    },
                    "end": {
                      "line": 189,
                      "column": 55,
                      "offset": 8093
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 189,
                      "column": 55,
                      "offset": 8093
                    },
                    "end": {
                      "line": 189,
                      "column": 56,
                      "offset": 8094
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 189,
                  "column": 3,
                  "offset": 8041
                },
                "end": {
                  "line": 189,
                  "column": 56,
                  "offset": 8094
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 189,
              "column": 1,
              "offset": 8039
            },
            "end": {
              "line": 189,
              "column": 56,
              "offset": 8094
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Using ",
                  "position": {
                    "start": {
                      "line": 190,
                      "column": 3,
                      "offset": 8097
                    },
                    "end": {
                      "line": 190,
                      "column": 9,
                      "offset": 8103
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dataProviderName",
                  "position": {
                    "start": {
                      "line": 190,
                      "column": 9,
                      "offset": 8103
                    },
                    "end": {
                      "line": 190,
                      "column": 27,
                      "offset": 8121
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " field to specify which data provider to use in data hooks in ",
                  "position": {
                    "start": {
                      "line": 190,
                      "column": 27,
                      "offset": 8121
                    },
                    "end": {
                      "line": 190,
                      "column": 89,
                      "offset": 8183
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "home-page.tsx",
                  "position": {
                    "start": {
                      "line": 190,
                      "column": 89,
                      "offset": 8183
                    },
                    "end": {
                      "line": 190,
                      "column": 104,
                      "offset": 8198
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 190,
                      "column": 104,
                      "offset": 8198
                    },
                    "end": {
                      "line": 190,
                      "column": 105,
                      "offset": 8199
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 190,
                  "column": 3,
                  "offset": 8097
                },
                "end": {
                  "line": 190,
                  "column": 105,
                  "offset": 8199
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 190,
              "column": 1,
              "offset": 8095
            },
            "end": {
              "line": 190,
              "column": 105,
              "offset": 8199
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 189,
          "column": 1,
          "offset": 8039
        },
        "end": {
          "line": 190,
          "column": 105,
          "offset": 8199
        },
        "indent": [1]
      }
    },
    {
      "type": "jsx",
      "value": "<MultipleDataProvider />",
      "position": {
        "start": {
          "line": 192,
          "column": 1,
          "offset": 8201
        },
        "end": {
          "line": 192,
          "column": 25,
          "offset": 8225
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Handling errors",
          "position": {
            "start": {
              "line": 194,
              "column": 4,
              "offset": 8230
            },
            "end": {
              "line": 194,
              "column": 19,
              "offset": 8245
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 194,
          "column": 1,
          "offset": 8227
        },
        "end": {
          "line": 194,
          "column": 19,
          "offset": 8245
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "handling-errors"
        },
        "id": "handling-errors"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"handling-errors\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine expects errors to be extended from ",
          "position": {
            "start": {
              "line": 196,
              "column": 1,
              "offset": 8247
            },
            "end": {
              "line": 196,
              "column": 43,
              "offset": 8289
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/core/interface-references#httperror",
          "children": [
            {
              "type": "text",
              "value": "HttpError",
              "position": {
                "start": {
                  "line": 196,
                  "column": 44,
                  "offset": 8290
                },
                "end": {
                  "line": 196,
                  "column": 53,
                  "offset": 8299
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 196,
              "column": 43,
              "offset": 8289
            },
            "end": {
              "line": 196,
              "column": 97,
              "offset": 8343
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ". We believe that having consistent error interface makes it easier to handle errors coming from your API.",
          "position": {
            "start": {
              "line": 196,
              "column": 97,
              "offset": 8343
            },
            "end": {
              "line": 196,
              "column": 203,
              "offset": 8449
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 196,
          "column": 1,
          "offset": 8247
        },
        "end": {
          "line": 196,
          "column": 203,
          "offset": 8449
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "When implemented correctly, Refine offers several advantages in error handling:",
          "position": {
            "start": {
              "line": 198,
              "column": 1,
              "offset": 8451
            },
            "end": {
              "line": 198,
              "column": 80,
              "offset": 8530
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 198,
          "column": 1,
          "offset": 8451
        },
        "end": {
          "line": 198,
          "column": 80,
          "offset": 8530
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Notification",
                      "position": {
                        "start": {
                          "line": 200,
                          "column": 5,
                          "offset": 8536
                        },
                        "end": {
                          "line": 200,
                          "column": 17,
                          "offset": 8548
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 200,
                      "column": 3,
                      "offset": 8534
                    },
                    "end": {
                      "line": 200,
                      "column": 19,
                      "offset": 8550
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": If you have ",
                  "position": {
                    "start": {
                      "line": 200,
                      "column": 19,
                      "offset": 8550
                    },
                    "end": {
                      "line": 200,
                      "column": 33,
                      "offset": 8564
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/docs/notification/notification-provider",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "notificationProvider",
                      "position": {
                        "start": {
                          "line": 200,
                          "column": 34,
                          "offset": 8565
                        },
                        "end": {
                          "line": 200,
                          "column": 56,
                          "offset": 8587
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " ",
                      "position": {
                        "start": {
                          "line": 200,
                          "column": 56,
                          "offset": 8587
                        },
                        "end": {
                          "line": 200,
                          "column": 57,
                          "offset": 8588
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 200,
                      "column": 33,
                      "offset": 8564
                    },
                    "end": {
                      "line": 200,
                      "column": 100,
                      "offset": 8631
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", Refine will automatically show a notification when an error occurs.",
                  "position": {
                    "start": {
                      "line": 200,
                      "column": 100,
                      "offset": 8631
                    },
                    "end": {
                      "line": 200,
                      "column": 169,
                      "offset": 8700
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 200,
                  "column": 3,
                  "offset": 8534
                },
                "end": {
                  "line": 200,
                  "column": 169,
                  "offset": 8700
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 200,
              "column": 1,
              "offset": 8532
            },
            "end": {
              "line": 200,
              "column": 169,
              "offset": 8700
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Server-Side Validation",
                      "position": {
                        "start": {
                          "line": 201,
                          "column": 5,
                          "offset": 8705
                        },
                        "end": {
                          "line": 201,
                          "column": 27,
                          "offset": 8727
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 201,
                      "column": 3,
                      "offset": 8703
                    },
                    "end": {
                      "line": 201,
                      "column": 29,
                      "offset": 8729
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": Shows ",
                  "position": {
                    "start": {
                      "line": 201,
                      "column": 29,
                      "offset": 8729
                    },
                    "end": {
                      "line": 201,
                      "column": 37,
                      "offset": 8737
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/docs/advanced-tutorials/forms/server-side-form-validation/",
                  "children": [
                    {
                      "type": "text",
                      "value": "errors coming from the API",
                      "position": {
                        "start": {
                          "line": 201,
                          "column": 38,
                          "offset": 8738
                        },
                        "end": {
                          "line": 201,
                          "column": 64,
                          "offset": 8764
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 201,
                      "column": 37,
                      "offset": 8737
                    },
                    "end": {
                      "line": 201,
                      "column": 126,
                      "offset": 8826
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " on the corresponding form fields.",
                  "position": {
                    "start": {
                      "line": 201,
                      "column": 126,
                      "offset": 8826
                    },
                    "end": {
                      "line": 201,
                      "column": 160,
                      "offset": 8860
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 201,
                  "column": 3,
                  "offset": 8703
                },
                "end": {
                  "line": 201,
                  "column": 160,
                  "offset": 8860
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 201,
              "column": 1,
              "offset": 8701
            },
            "end": {
              "line": 201,
              "column": 160,
              "offset": 8860
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Optimistic Updates",
                      "position": {
                        "start": {
                          "line": 202,
                          "column": 5,
                          "offset": 8865
                        },
                        "end": {
                          "line": 202,
                          "column": 23,
                          "offset": 8883
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 202,
                      "column": 3,
                      "offset": 8863
                    },
                    "end": {
                      "line": 202,
                      "column": 25,
                      "offset": 8885
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": Instantly update UI when you send a mutation and automatically revert the changes if an error occurs during the mutation.",
                  "position": {
                    "start": {
                      "line": 202,
                      "column": 25,
                      "offset": 8885
                    },
                    "end": {
                      "line": 202,
                      "column": 148,
                      "offset": 9008
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 202,
                  "column": 3,
                  "offset": 8863
                },
                "end": {
                  "line": 202,
                  "column": 148,
                  "offset": 9008
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 202,
              "column": 1,
              "offset": 8861
            },
            "end": {
              "line": 202,
              "column": 148,
              "offset": 9008
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 200,
          "column": 1,
          "offset": 8532
        },
        "end": {
          "line": 202,
          "column": 148,
          "offset": 9008
        },
        "indent": [1, 1]
      }
    },
    {
      "type": "jsx",
      "value": "<ErrorHandling />",
      "position": {
        "start": {
          "line": 204,
          "column": 1,
          "offset": 9010
        },
        "end": {
          "line": 204,
          "column": 18,
          "offset": 9027
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Listing Data",
          "position": {
            "start": {
              "line": 206,
              "column": 4,
              "offset": 9032
            },
            "end": {
              "line": 206,
              "column": 16,
              "offset": 9044
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 206,
          "column": 1,
          "offset": 9029
        },
        "end": {
          "line": 206,
          "column": 16,
          "offset": 9044
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "listing-data"
        },
        "id": "listing-data"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"listing-data\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Imagine we need to fetch a list of records from the ",
          "position": {
            "start": {
              "line": 208,
              "column": 1,
              "offset": 9046
            },
            "end": {
              "line": 208,
              "column": 53,
              "offset": 9098
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "products",
          "position": {
            "start": {
              "line": 208,
              "column": 53,
              "offset": 9098
            },
            "end": {
              "line": 208,
              "column": 63,
              "offset": 9108
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " endpoint. For this, we can use ",
          "position": {
            "start": {
              "line": 208,
              "column": 63,
              "offset": 9108
            },
            "end": {
              "line": 208,
              "column": 95,
              "offset": 9140
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "use-list",
          "label": "use-list",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "useList",
              "position": {
                "start": {
                  "line": 208,
                  "column": 96,
                  "offset": 9141
                },
                "end": {
                  "line": 208,
                  "column": 105,
                  "offset": 9150
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 208,
              "column": 95,
              "offset": 9140
            },
            "end": {
              "line": 208,
              "column": 116,
              "offset": 9161
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " or ",
          "position": {
            "start": {
              "line": 208,
              "column": 116,
              "offset": 9161
            },
            "end": {
              "line": 208,
              "column": 120,
              "offset": 9165
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "use-infinite-list",
          "label": "use-infinite-list",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "useInfiniteList",
              "position": {
                "start": {
                  "line": 208,
                  "column": 121,
                  "offset": 9166
                },
                "end": {
                  "line": 208,
                  "column": 138,
                  "offset": 9183
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 208,
              "column": 120,
              "offset": 9165
            },
            "end": {
              "line": 208,
              "column": 158,
              "offset": 9203
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hooks. It calls ",
          "position": {
            "start": {
              "line": 208,
              "column": 158,
              "offset": 9203
            },
            "end": {
              "line": 208,
              "column": 175,
              "offset": 9220
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "dataProvider.getList",
          "position": {
            "start": {
              "line": 208,
              "column": 175,
              "offset": 9220
            },
            "end": {
              "line": 208,
              "column": 197,
              "offset": 9242
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " method from your data provider, returns ",
          "position": {
            "start": {
              "line": 208,
              "column": 197,
              "offset": 9242
            },
            "end": {
              "line": 208,
              "column": 238,
              "offset": 9283
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "data",
          "position": {
            "start": {
              "line": 208,
              "column": 238,
              "offset": 9283
            },
            "end": {
              "line": 208,
              "column": 244,
              "offset": 9289
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " and ",
          "position": {
            "start": {
              "line": 208,
              "column": 244,
              "offset": 9289
            },
            "end": {
              "line": 208,
              "column": 249,
              "offset": 9294
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "total",
          "position": {
            "start": {
              "line": 208,
              "column": 249,
              "offset": 9294
            },
            "end": {
              "line": 208,
              "column": 256,
              "offset": 9301
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " fields from the response.",
          "position": {
            "start": {
              "line": 208,
              "column": 256,
              "offset": 9301
            },
            "end": {
              "line": 208,
              "column": 282,
              "offset": 9327
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 208,
          "column": 1,
          "offset": 9046
        },
        "end": {
          "line": 208,
          "column": 282,
          "offset": 9327
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<UseList />",
      "position": {
        "start": {
          "line": 210,
          "column": 1,
          "offset": 9329
        },
        "end": {
          "line": 210,
          "column": 12,
          "offset": 9340
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 3,
      "children": [
        {
          "type": "text",
          "value": "Filters, Sorters and Pagination",
          "position": {
            "start": {
              "line": 212,
              "column": 5,
              "offset": 9346
            },
            "end": {
              "line": 212,
              "column": 36,
              "offset": 9377
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 212,
          "column": 1,
          "offset": 9342
        },
        "end": {
          "line": 212,
          "column": 36,
          "offset": 9377
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "filters-sorters-and-pagination"
        },
        "id": "filters-sorters-and-pagination"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"filters-sorters-and-pagination\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "We fetched all the products from the ",
          "position": {
            "start": {
              "line": 214,
              "column": 1,
              "offset": 9379
            },
            "end": {
              "line": 214,
              "column": 38,
              "offset": 9416
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "products",
          "position": {
            "start": {
              "line": 214,
              "column": 38,
              "offset": 9416
            },
            "end": {
              "line": 214,
              "column": 48,
              "offset": 9426
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " endpoint in the previous example. But in real world, we usually need to fetch a subset of the data.",
          "position": {
            "start": {
              "line": 214,
              "column": 48,
              "offset": 9426
            },
            "end": {
              "line": 214,
              "column": 148,
              "offset": 9526
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 214,
          "column": 1,
          "offset": 9379
        },
        "end": {
          "line": 214,
          "column": 148,
          "offset": 9526
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine provides a unified ",
          "position": {
            "start": {
              "line": 216,
              "column": 1,
              "offset": 9528
            },
            "end": {
              "line": 216,
              "column": 27,
              "offset": 9554
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-filters",
          "label": "crud-filters",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "filters",
              "position": {
                "start": {
                  "line": 216,
                  "column": 28,
                  "offset": 9555
                },
                "end": {
                  "line": 216,
                  "column": 37,
                  "offset": 9564
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 216,
              "column": 27,
              "offset": 9554
            },
            "end": {
              "line": 216,
              "column": 52,
              "offset": 9579
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 216,
              "column": 52,
              "offset": 9579
            },
            "end": {
              "line": 216,
              "column": 54,
              "offset": 9581
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-sorting",
          "label": "crud-sorting",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "sorters",
              "position": {
                "start": {
                  "line": 216,
                  "column": 55,
                  "offset": 9582
                },
                "end": {
                  "line": 216,
                  "column": 64,
                  "offset": 9591
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 216,
              "column": 54,
              "offset": 9581
            },
            "end": {
              "line": 216,
              "column": 79,
              "offset": 9606
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", and ",
          "position": {
            "start": {
              "line": 216,
              "column": 79,
              "offset": 9606
            },
            "end": {
              "line": 216,
              "column": 85,
              "offset": 9612
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "pagination",
          "label": "pagination",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "pagination",
              "position": {
                "start": {
                  "line": 216,
                  "column": 86,
                  "offset": 9613
                },
                "end": {
                  "line": 216,
                  "column": 98,
                  "offset": 9625
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 216,
              "column": 85,
              "offset": 9612
            },
            "end": {
              "line": 216,
              "column": 111,
              "offset": 9638
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " parameters in data hooks to pass your ",
          "position": {
            "start": {
              "line": 216,
              "column": 111,
              "offset": 9638
            },
            "end": {
              "line": 216,
              "column": 150,
              "offset": 9677
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "data provider",
          "position": {
            "start": {
              "line": 216,
              "column": 150,
              "offset": 9677
            },
            "end": {
              "line": 216,
              "column": 165,
              "offset": 9692
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " methods, making it possible to fetch the data you need with any complexity. It's data provider's responsibility to handle these parameters and modify the request sent to your API.",
          "position": {
            "start": {
              "line": 216,
              "column": 165,
              "offset": 9692
            },
            "end": {
              "line": 216,
              "column": 345,
              "offset": 9872
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 216,
          "column": 1,
          "offset": 9528
        },
        "end": {
          "line": 216,
          "column": 345,
          "offset": 9872
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Now let's make it more realistic example by adding filters, sorters, and pagination.",
          "position": {
            "start": {
              "line": 218,
              "column": 1,
              "offset": 9874
            },
            "end": {
              "line": 218,
              "column": 85,
              "offset": 9958
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 218,
          "column": 1,
          "offset": 9874
        },
        "end": {
          "line": 218,
          "column": 85,
          "offset": 9958
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "We want to:",
          "position": {
            "start": {
              "line": 220,
              "column": 1,
              "offset": 9960
            },
            "end": {
              "line": 220,
              "column": 12,
              "offset": 9971
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 220,
          "column": 1,
          "offset": 9960
        },
        "end": {
          "line": 220,
          "column": 12,
          "offset": 9971
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Fetch 5 products",
                  "position": {
                    "start": {
                      "line": 222,
                      "column": 3,
                      "offset": 9975
                    },
                    "end": {
                      "line": 222,
                      "column": 19,
                      "offset": 9991
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 222,
                  "column": 3,
                  "offset": 9975
                },
                "end": {
                  "line": 222,
                  "column": 19,
                  "offset": 9991
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 222,
              "column": 1,
              "offset": 9973
            },
            "end": {
              "line": 222,
              "column": 19,
              "offset": 9991
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "With ",
                  "position": {
                    "start": {
                      "line": 223,
                      "column": 3,
                      "offset": 9994
                    },
                    "end": {
                      "line": 223,
                      "column": 8,
                      "offset": 9999
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "material",
                  "position": {
                    "start": {
                      "line": 223,
                      "column": 8,
                      "offset": 9999
                    },
                    "end": {
                      "line": 223,
                      "column": 18,
                      "offset": 10009
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " field equals to ",
                  "position": {
                    "start": {
                      "line": 223,
                      "column": 18,
                      "offset": 10009
                    },
                    "end": {
                      "line": 223,
                      "column": 35,
                      "offset": 10026
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "wooden",
                  "position": {
                    "start": {
                      "line": 223,
                      "column": 35,
                      "offset": 10026
                    },
                    "end": {
                      "line": 223,
                      "column": 43,
                      "offset": 10034
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 223,
                  "column": 3,
                  "offset": 9994
                },
                "end": {
                  "line": 223,
                  "column": 43,
                  "offset": 10034
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 223,
              "column": 1,
              "offset": 9992
            },
            "end": {
              "line": 223,
              "column": 43,
              "offset": 10034
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sorted by ",
                  "position": {
                    "start": {
                      "line": 224,
                      "column": 3,
                      "offset": 10037
                    },
                    "end": {
                      "line": 224,
                      "column": 13,
                      "offset": 10047
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "ID",
                  "position": {
                    "start": {
                      "line": 224,
                      "column": 13,
                      "offset": 10047
                    },
                    "end": {
                      "line": 224,
                      "column": 17,
                      "offset": 10051
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " field in ",
                  "position": {
                    "start": {
                      "line": 224,
                      "column": 17,
                      "offset": 10051
                    },
                    "end": {
                      "line": 224,
                      "column": 27,
                      "offset": 10061
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "descending",
                  "position": {
                    "start": {
                      "line": 224,
                      "column": 27,
                      "offset": 10061
                    },
                    "end": {
                      "line": 224,
                      "column": 39,
                      "offset": 10073
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " order",
                  "position": {
                    "start": {
                      "line": 224,
                      "column": 39,
                      "offset": 10073
                    },
                    "end": {
                      "line": 224,
                      "column": 45,
                      "offset": 10079
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 224,
                  "column": 3,
                  "offset": 10037
                },
                "end": {
                  "line": 224,
                  "column": 45,
                  "offset": 10079
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 224,
              "column": 1,
              "offset": 10035
            },
            "end": {
              "line": 224,
              "column": 45,
              "offset": 10079
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 222,
          "column": 1,
          "offset": 9973
        },
        "end": {
          "line": 224,
          "column": 45,
          "offset": 10079
        },
        "indent": [1, 1]
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For this purpose, we can pass additional parameters to ",
          "position": {
            "start": {
              "line": 226,
              "column": 1,
              "offset": 10081
            },
            "end": {
              "line": 226,
              "column": 56,
              "offset": 10136
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 226,
              "column": 56,
              "offset": 10136
            },
            "end": {
              "line": 226,
              "column": 65,
              "offset": 10145
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook like ",
          "position": {
            "start": {
              "line": 226,
              "column": 65,
              "offset": 10145
            },
            "end": {
              "line": 226,
              "column": 76,
              "offset": 10156
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-filters",
          "label": "crud-filters",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "filters",
              "position": {
                "start": {
                  "line": 226,
                  "column": 77,
                  "offset": 10157
                },
                "end": {
                  "line": 226,
                  "column": 86,
                  "offset": 10166
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 226,
              "column": 76,
              "offset": 10156
            },
            "end": {
              "line": 226,
              "column": 101,
              "offset": 10181
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 226,
              "column": 101,
              "offset": 10181
            },
            "end": {
              "line": 226,
              "column": 103,
              "offset": 10183
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-sorting",
          "label": "crud-sorting",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "sorters",
              "position": {
                "start": {
                  "line": 226,
                  "column": 104,
                  "offset": 10184
                },
                "end": {
                  "line": 226,
                  "column": 113,
                  "offset": 10193
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 226,
              "column": 103,
              "offset": 10183
            },
            "end": {
              "line": 226,
              "column": 128,
              "offset": 10208
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", and ",
          "position": {
            "start": {
              "line": 226,
              "column": 128,
              "offset": 10208
            },
            "end": {
              "line": 226,
              "column": 134,
              "offset": 10214
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "pagination",
          "label": "pagination",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "pagination",
              "position": {
                "start": {
                  "line": 226,
                  "column": 135,
                  "offset": 10215
                },
                "end": {
                  "line": 226,
                  "column": 147,
                  "offset": 10227
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 226,
              "column": 134,
              "offset": 10214
            },
            "end": {
              "line": 226,
              "column": 160,
              "offset": 10240
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ".",
          "position": {
            "start": {
              "line": 226,
              "column": 160,
              "offset": 10240
            },
            "end": {
              "line": 226,
              "column": 161,
              "offset": 10241
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 226,
          "column": 1,
          "offset": 10081
        },
        "end": {
          "line": 226,
          "column": 161,
          "offset": 10241
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 228,
              "column": 1,
              "offset": 10243
            },
            "end": {
              "line": 228,
              "column": 10,
              "offset": 10252
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " calls the ",
          "position": {
            "start": {
              "line": 228,
              "column": 10,
              "offset": 10252
            },
            "end": {
              "line": 228,
              "column": 21,
              "offset": 10263
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "dataProvider.getList",
          "position": {
            "start": {
              "line": 228,
              "column": 21,
              "offset": 10263
            },
            "end": {
              "line": 228,
              "column": 43,
              "offset": 10285
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " method under the hood with the given parameters. We will use these parameters modify our request sent to our API.",
          "position": {
            "start": {
              "line": 228,
              "column": 43,
              "offset": 10285
            },
            "end": {
              "line": 228,
              "column": 157,
              "offset": 10399
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 228,
          "column": 1,
          "offset": 10243
        },
        "end": {
          "line": 228,
          "column": 157,
          "offset": 10399
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<UseListWithFilters />",
      "position": {
        "start": {
          "line": 230,
          "column": 1,
          "offset": 10401
        },
        "end": {
          "line": 230,
          "column": 23,
          "offset": 10423
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "While the example above is simple, it's also possible to build more complex queries with ",
          "position": {
            "start": {
              "line": 232,
              "column": 1,
              "offset": 10425
            },
            "end": {
              "line": 232,
              "column": 90,
              "offset": 10514
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-filters",
          "label": "crud-filters",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "filters",
              "position": {
                "start": {
                  "line": 232,
                  "column": 91,
                  "offset": 10515
                },
                "end": {
                  "line": 232,
                  "column": 100,
                  "offset": 10524
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 232,
              "column": 90,
              "offset": 10514
            },
            "end": {
              "line": 232,
              "column": 115,
              "offset": 10539
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " and ",
          "position": {
            "start": {
              "line": 232,
              "column": 115,
              "offset": 10539
            },
            "end": {
              "line": 232,
              "column": 120,
              "offset": 10544
            },
            "indent": []
          }
        },
        {
          "type": "linkReference",
          "identifier": "crud-sorting",
          "label": "crud-sorting",
          "referenceType": "full",
          "children": [
            {
              "type": "inlineCode",
              "value": "sorters",
              "position": {
                "start": {
                  "line": 232,
                  "column": 121,
                  "offset": 10545
                },
                "end": {
                  "line": 232,
                  "column": 130,
                  "offset": 10554
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 232,
              "column": 120,
              "offset": 10544
            },
            "end": {
              "line": 232,
              "column": 145,
              "offset": 10569
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ".",
          "position": {
            "start": {
              "line": 232,
              "column": 145,
              "offset": 10569
            },
            "end": {
              "line": 232,
              "column": 146,
              "offset": 10570
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 232,
          "column": 1,
          "offset": 10425
        },
        "end": {
          "line": 232,
          "column": 146,
          "offset": 10570
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For instance, we can fetch products:",
          "position": {
            "start": {
              "line": 234,
              "column": 1,
              "offset": 10572
            },
            "end": {
              "line": 234,
              "column": 37,
              "offset": 10608
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 234,
          "column": 1,
          "offset": 10572
        },
        "end": {
          "line": 234,
          "column": 37,
          "offset": 10608
        },
        "indent": []
      }
    },
    {
      "type": "list",
      "ordered": false,
      "start": null,
      "spread": false,
      "children": [
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "With wooden material",
                  "position": {
                    "start": {
                      "line": 236,
                      "column": 3,
                      "offset": 10612
                    },
                    "end": {
                      "line": 236,
                      "column": 23,
                      "offset": 10632
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 236,
                  "column": 3,
                  "offset": 10612
                },
                "end": {
                  "line": 236,
                  "column": 23,
                  "offset": 10632
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 236,
              "column": 1,
              "offset": 10610
            },
            "end": {
              "line": 236,
              "column": 23,
              "offset": 10632
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Belongs to category ID 45",
                  "position": {
                    "start": {
                      "line": 237,
                      "column": 3,
                      "offset": 10635
                    },
                    "end": {
                      "line": 237,
                      "column": 28,
                      "offset": 10660
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 237,
                  "column": 3,
                  "offset": 10635
                },
                "end": {
                  "line": 237,
                  "column": 28,
                  "offset": 10660
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 237,
              "column": 1,
              "offset": 10633
            },
            "end": {
              "line": 237,
              "column": 28,
              "offset": 10660
            },
            "indent": []
          }
        },
        {
          "type": "listItem",
          "spread": false,
          "checked": null,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "OR",
                      "position": {
                        "start": {
                          "line": 238,
                          "column": 5,
                          "offset": 10665
                        },
                        "end": {
                          "line": 238,
                          "column": 7,
                          "offset": 10667
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 238,
                      "column": 3,
                      "offset": 10663
                    },
                    "end": {
                      "line": 238,
                      "column": 9,
                      "offset": 10669
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " have a price between 1000 and 2000.",
                  "position": {
                    "start": {
                      "line": 238,
                      "column": 9,
                      "offset": 10669
                    },
                    "end": {
                      "line": 238,
                      "column": 45,
                      "offset": 10705
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 238,
                  "column": 3,
                  "offset": 10663
                },
                "end": {
                  "line": 238,
                  "column": 45,
                  "offset": 10705
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 238,
              "column": 1,
              "offset": 10661
            },
            "end": {
              "line": 238,
              "column": 45,
              "offset": 10705
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 236,
          "column": 1,
          "offset": 10610
        },
        "end": {
          "line": 238,
          "column": 45,
          "offset": 10705
        },
        "indent": [1, 1]
      }
    },
    {
      "type": "code",
      "lang": "tsx",
      "meta": null,
      "value": "import { DataProvider, useList } from \"@refinedev/core\";\n\nuseList({\n  resource: \"products\",\n  pagination: {\n    current: 1,\n    pageSize: 10,\n  },\n  filters: [\n    {\n      operator: \"and\",\n      value: [\n        { field: \"material\", operator: \"eq\", value: \"wooden\" },\n        { field: \"category.id\", operator: \"eq\", value: 45 },\n      ],\n    },\n    {\n      operator: \"or\",\n      value: [\n        { field: \"price\", operator: \"gte\", value: 1000 },\n        { field: \"price\", operator: \"lte\", value: 2000 },\n      ],\n    },\n  ],\n});",
      "position": {
        "start": {
          "line": 240,
          "column": 1,
          "offset": 10707
        },
        "end": {
          "line": 266,
          "column": 4,
          "offset": 11246
        },
        "indent": [
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1
        ]
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Relationships",
          "position": {
            "start": {
              "line": 268,
              "column": 4,
              "offset": 11251
            },
            "end": {
              "line": 268,
              "column": 17,
              "offset": 11264
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 268,
          "column": 1,
          "offset": 11248
        },
        "end": {
          "line": 268,
          "column": 17,
          "offset": 11264
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "relationships"
        },
        "id": "relationships"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"relationships\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Refine handles data relations with data hooks(eg: ",
          "position": {
            "start": {
              "line": 270,
              "column": 1,
              "offset": 11266
            },
            "end": {
              "line": 270,
              "column": 51,
              "offset": 11316
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 270,
              "column": 51,
              "offset": 11316
            },
            "end": {
              "line": 270,
              "column": 59,
              "offset": 11324
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", ",
          "position": {
            "start": {
              "line": 270,
              "column": 59,
              "offset": 11324
            },
            "end": {
              "line": 270,
              "column": 61,
              "offset": 11326
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useMany",
          "position": {
            "start": {
              "line": 270,
              "column": 61,
              "offset": 11326
            },
            "end": {
              "line": 270,
              "column": 70,
              "offset": 11335
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ", etc.). This compositional design allows you to flexibly and efficiently manage data relationships to suit your specific requirements.",
          "position": {
            "start": {
              "line": 270,
              "column": 70,
              "offset": 11335
            },
            "end": {
              "line": 270,
              "column": 205,
              "offset": 11470
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 270,
          "column": 1,
          "offset": 11266
        },
        "end": {
          "line": 270,
          "column": 205,
          "offset": 11470
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 3,
      "children": [
        {
          "type": "text",
          "value": "One-to-One",
          "position": {
            "start": {
              "line": 272,
              "column": 5,
              "offset": 11476
            },
            "end": {
              "line": 272,
              "column": 15,
              "offset": 11486
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 272,
          "column": 1,
          "offset": 11472
        },
        "end": {
          "line": 272,
          "column": 15,
          "offset": 11486
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "one-to-one"
        },
        "id": "one-to-one"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"one-to-one\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In a one-to-one relationship, each thing matches with just one other thing. It's like a unique partnership.",
          "position": {
            "start": {
              "line": 274,
              "column": 1,
              "offset": 11488
            },
            "end": {
              "line": 274,
              "column": 108,
              "offset": 11595
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 274,
          "column": 1,
          "offset": 11488
        },
        "end": {
          "line": 274,
          "column": 108,
          "offset": 11595
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For instance, a product can have only one product detail.",
          "position": {
            "start": {
              "line": 276,
              "column": 1,
              "offset": 11597
            },
            "end": {
              "line": 276,
              "column": 58,
              "offset": 11654
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 276,
          "column": 1,
          "offset": 11597
        },
        "end": {
          "line": 276,
          "column": 58,
          "offset": 11654
        },
        "indent": []
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-start ",
      "position": {
        "start": {
          "line": 278,
          "column": 1,
          "offset": 11656
        },
        "end": {
          "line": 278,
          "column": 31,
          "offset": 11686
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "md",
      "meta": null,
      "value": "┌──────────────┐       ┌────────────────┐\n│ Products     │       │ ProductDetail  │\n│--------------│       │----------------│\n│ id           │───────│ id             │\n│ name         │       │ weight         │\n│ price        │       │ dimensions     │\n│ description  │       │ productId      │\n│ detail       │       │                │\n│              │       │                │\n└──────────────┘       └────────────────┘",
      "position": {
        "start": {
          "line": 279,
          "column": 1,
          "offset": 11687
        },
        "end": {
          "line": 290,
          "column": 4,
          "offset": 12116
        },
        "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-end ",
      "position": {
        "start": {
          "line": 291,
          "column": 1,
          "offset": 12117
        },
        "end": {
          "line": 291,
          "column": 29,
          "offset": 12145
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "We can use the ",
          "position": {
            "start": {
              "line": 293,
              "column": 1,
              "offset": 12147
            },
            "end": {
              "line": 293,
              "column": 16,
              "offset": 12162
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useOne",
          "position": {
            "start": {
              "line": 293,
              "column": 16,
              "offset": 12162
            },
            "end": {
              "line": 293,
              "column": 24,
              "offset": 12170
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook to fetch the detail of a product.",
          "position": {
            "start": {
              "line": 293,
              "column": 24,
              "offset": 12170
            },
            "end": {
              "line": 293,
              "column": 63,
              "offset": 12209
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 293,
          "column": 1,
          "offset": 12147
        },
        "end": {
          "line": 293,
          "column": 63,
          "offset": 12209
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<OneToOne />",
      "position": {
        "start": {
          "line": 295,
          "column": 1,
          "offset": 12211
        },
        "end": {
          "line": 295,
          "column": 13,
          "offset": 12223
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 3,
      "children": [
        {
          "type": "text",
          "value": "One-to-Many",
          "position": {
            "start": {
              "line": 297,
              "column": 5,
              "offset": 12229
            },
            "end": {
              "line": 297,
              "column": 16,
              "offset": 12240
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 297,
          "column": 1,
          "offset": 12225
        },
        "end": {
          "line": 297,
          "column": 16,
          "offset": 12240
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "one-to-many"
        },
        "id": "one-to-many"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"one-to-many\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In a one-to-many relationship, each resource matches with many other resource. It's like a parent with many children.",
          "position": {
            "start": {
              "line": 299,
              "column": 1,
              "offset": 12242
            },
            "end": {
              "line": 299,
              "column": 118,
              "offset": 12359
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 299,
          "column": 1,
          "offset": 12242
        },
        "end": {
          "line": 299,
          "column": 118,
          "offset": 12359
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For instance, a products can have many reviews.",
          "position": {
            "start": {
              "line": 301,
              "column": 1,
              "offset": 12361
            },
            "end": {
              "line": 301,
              "column": 48,
              "offset": 12408
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 301,
          "column": 1,
          "offset": 12361
        },
        "end": {
          "line": 301,
          "column": 48,
          "offset": 12408
        },
        "indent": []
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-start ",
      "position": {
        "start": {
          "line": 303,
          "column": 1,
          "offset": 12410
        },
        "end": {
          "line": 303,
          "column": 31,
          "offset": 12440
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "md",
      "meta": null,
      "value": "┌──────────────┐       ┌────────────────┐\n│ Products     │       │ Reviews        │\n│--------------│       │----------------│\n│ id           │───┐   │ id             │\n│ name         │   │   │ rating         │\n│ price        │   │   │ comment        │\n│ description  │   │   │ user           │\n│ detail       │   └───│ product        │\n│              │       │                │\n└──────────────┘       └────────────────┘",
      "position": {
        "start": {
          "line": 305,
          "column": 1,
          "offset": 12442
        },
        "end": {
          "line": 316,
          "column": 4,
          "offset": 12871
        },
        "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-end ",
      "position": {
        "start": {
          "line": 317,
          "column": 1,
          "offset": 12872
        },
        "end": {
          "line": 317,
          "column": 29,
          "offset": 12900
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "We can use the ",
          "position": {
            "start": {
              "line": 319,
              "column": 1,
              "offset": 12902
            },
            "end": {
              "line": 319,
              "column": 16,
              "offset": 12917
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useList",
          "position": {
            "start": {
              "line": 319,
              "column": 16,
              "offset": 12917
            },
            "end": {
              "line": 319,
              "column": 25,
              "offset": 12926
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook and filter by the product ID to fetch the reviews of a product.",
          "position": {
            "start": {
              "line": 319,
              "column": 25,
              "offset": 12926
            },
            "end": {
              "line": 319,
              "column": 94,
              "offset": 12995
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 319,
          "column": 1,
          "offset": 12902
        },
        "end": {
          "line": 319,
          "column": 94,
          "offset": 12995
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<OneToMany />",
      "position": {
        "start": {
          "line": 321,
          "column": 1,
          "offset": 12997
        },
        "end": {
          "line": 321,
          "column": 14,
          "offset": 13010
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 3,
      "children": [
        {
          "type": "text",
          "value": "Many-to-Many",
          "position": {
            "start": {
              "line": 323,
              "column": 5,
              "offset": 13016
            },
            "end": {
              "line": 323,
              "column": 17,
              "offset": 13028
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 323,
          "column": 1,
          "offset": 13012
        },
        "end": {
          "line": 323,
          "column": 17,
          "offset": 13028
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "many-to-many"
        },
        "id": "many-to-many"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"many-to-many\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In a many-to-many relationship, each resource matches with many other resources, and each of those resources matches with many other resources.",
          "position": {
            "start": {
              "line": 325,
              "column": 1,
              "offset": 13030
            },
            "end": {
              "line": 325,
              "column": 144,
              "offset": 13173
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 325,
          "column": 1,
          "offset": 13030
        },
        "end": {
          "line": 325,
          "column": 144,
          "offset": 13173
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "For instance, products can have many categories, and categories can have many products.",
          "position": {
            "start": {
              "line": 327,
              "column": 1,
              "offset": 13175
            },
            "end": {
              "line": 327,
              "column": 88,
              "offset": 13262
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 327,
          "column": 1,
          "offset": 13175
        },
        "end": {
          "line": 327,
          "column": 88,
          "offset": 13262
        },
        "indent": []
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-start ",
      "position": {
        "start": {
          "line": 329,
          "column": 1,
          "offset": 13264
        },
        "end": {
          "line": 329,
          "column": 31,
          "offset": 13294
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "md",
      "meta": null,
      "value": "┌──────────────┐       ┌───────────────────┐       ┌──────────────┐\n│ Products     │       │ ProductCategories │       │ Categories   │\n│--------------│       │----------------───│       │--------------│\n│ id           │───┐   │ id                │   ┌───│ id           │\n│ name         │   └───│ productId         │   │   │ name         │\n│ price        │       │ categoryId        │───┘   │ description  │\n│ description  │       │                   │       │              │\n│ detail       │       │                   │       │              │\n│              │       │                   │       │              │\n└──────────────┘       └───────────────────┘       └──────────────┘\n",
      "position": {
        "start": {
          "line": 330,
          "column": 1,
          "offset": 13295
        },
        "end": {
          "line": 342,
          "column": 4,
          "offset": 13985
        },
        "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      }
    },
    {
      "type": "comment",
      "value": " prettier-ignore-end ",
      "position": {
        "start": {
          "line": 343,
          "column": 1,
          "offset": 13986
        },
        "end": {
          "line": 343,
          "column": 29,
          "offset": 14014
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In this case, we can use the ",
          "position": {
            "start": {
              "line": 345,
              "column": 1,
              "offset": 14016
            },
            "end": {
              "line": 345,
              "column": 30,
              "offset": 14045
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useMany",
          "position": {
            "start": {
              "line": 345,
              "column": 30,
              "offset": 14045
            },
            "end": {
              "line": 345,
              "column": 39,
              "offset": 14054
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook to fetch the categories of a product and the ",
          "position": {
            "start": {
              "line": 345,
              "column": 39,
              "offset": 14054
            },
            "end": {
              "line": 345,
              "column": 90,
              "offset": 14105
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "useMany",
          "position": {
            "start": {
              "line": 345,
              "column": 90,
              "offset": 14105
            },
            "end": {
              "line": 345,
              "column": 99,
              "offset": 14114
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " hook to fetch the products of a category.",
          "position": {
            "start": {
              "line": 345,
              "column": 99,
              "offset": 14114
            },
            "end": {
              "line": 345,
              "column": 141,
              "offset": 14156
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 345,
          "column": 1,
          "offset": 14016
        },
        "end": {
          "line": 345,
          "column": 141,
          "offset": 14156
        },
        "indent": []
      }
    },
    {
      "type": "code",
      "lang": "tsx",
      "meta": null,
      "value": "import { DataProvider, useMany } from \"@refinedev/core\";\n\nconst { data: productCategories } = useList({\n  resource: \"productCategories\",\n});\n\nconst { data: products } = useMany({\n  resource: \"products\",\n  ids: productCategories.map((productCategory) => productCategory.productId),\n  queryOptions: {\n    enabled: productCategories.length > 0,\n  },\n});\n\nconst { data: categories } = useMany({\n  resource: \"categories\",\n  ids: productCategories.map((productCategory) => productCategory.categoryId),\n  queryOptions: {\n    enabled: productCategories.length > 0,\n  },\n});",
      "position": {
        "start": {
          "line": 347,
          "column": 1,
          "offset": 14158
        },
        "end": {
          "line": 369,
          "column": 4,
          "offset": 14734
        },
        "indent": [
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
        ]
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Authentication ",
          "position": {
            "start": {
              "line": 371,
              "column": 4,
              "offset": 14739
            },
            "end": {
              "line": 371,
              "column": 19,
              "offset": 14754
            },
            "indent": []
          }
        },
        {
          "type": "jsx",
          "value": "<GuideBadge id=\"guides-concepts/authentication/\" />",
          "position": {
            "start": {
              "line": 371,
              "column": 19,
              "offset": 14754
            },
            "end": {
              "line": 371,
              "column": 70,
              "offset": 14805
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 371,
          "column": 1,
          "offset": 14736
        },
        "end": {
          "line": 371,
          "column": 70,
          "offset": 14805
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "authentication-"
        },
        "id": "authentication-"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"authentication-\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "Imagine you want to fetch a data from a protected API. To do this, you will first need to obtain your authentication token and you will need to send this token with every request.",
          "position": {
            "start": {
              "line": 373,
              "column": 1,
              "offset": 14807
            },
            "end": {
              "line": 373,
              "column": 180,
              "offset": 14986
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 373,
          "column": 1,
          "offset": 14807
        },
        "end": {
          "line": 373,
          "column": 180,
          "offset": 14986
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "In Refine we handle ",
          "position": {
            "start": {
              "line": 375,
              "column": 1,
              "offset": 14988
            },
            "end": {
              "line": 375,
              "column": 21,
              "offset": 15008
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/guides-concepts/authentication/",
          "children": [
            {
              "type": "text",
              "value": "authentication",
              "position": {
                "start": {
                  "line": 375,
                  "column": 22,
                  "offset": 15009
                },
                "end": {
                  "line": 375,
                  "column": 36,
                  "offset": 15023
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 375,
              "column": 21,
              "offset": 15008
            },
            "end": {
              "line": 375,
              "column": 76,
              "offset": 15063
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " with ",
          "position": {
            "start": {
              "line": 375,
              "column": 76,
              "offset": 15063
            },
            "end": {
              "line": 375,
              "column": 82,
              "offset": 15069
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/authentication/auth-provider/",
          "children": [
            {
              "type": "text",
              "value": "Auth Provider",
              "position": {
                "start": {
                  "line": 375,
                  "column": 83,
                  "offset": 15070
                },
                "end": {
                  "line": 375,
                  "column": 96,
                  "offset": 15083
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 375,
              "column": 82,
              "offset": 15069
            },
            "end": {
              "line": 375,
              "column": 134,
              "offset": 15121
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": ". To get token from the API, we will use the ",
          "position": {
            "start": {
              "line": 375,
              "column": 134,
              "offset": 15121
            },
            "end": {
              "line": 375,
              "column": 179,
              "offset": 15166
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "authProvider.login",
          "position": {
            "start": {
              "line": 375,
              "column": 179,
              "offset": 15166
            },
            "end": {
              "line": 375,
              "column": 199,
              "offset": 15186
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " method. Then, we will use ",
          "position": {
            "start": {
              "line": 375,
              "column": 199,
              "offset": 15186
            },
            "end": {
              "line": 375,
              "column": 226,
              "offset": 15213
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/authentication/components/authenticated",
          "children": [
            {
              "type": "inlineCode",
              "value": "<Authenticated />",
              "position": {
                "start": {
                  "line": 375,
                  "column": 227,
                  "offset": 15214
                },
                "end": {
                  "line": 375,
                  "column": 246,
                  "offset": 15233
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 375,
              "column": 226,
              "offset": 15213
            },
            "end": {
              "line": 375,
              "column": 294,
              "offset": 15281
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " component to to render the appropriate components.",
          "position": {
            "start": {
              "line": 375,
              "column": 294,
              "offset": 15281
            },
            "end": {
              "line": 375,
              "column": 345,
              "offset": 15332
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 375,
          "column": 1,
          "offset": 14988
        },
        "end": {
          "line": 375,
          "column": 345,
          "offset": 15332
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "After obtaining the token, we'll use Axios interceptors to include the token in the headers of all requests.",
          "position": {
            "start": {
              "line": 377,
              "column": 1,
              "offset": 15334
            },
            "end": {
              "line": 377,
              "column": 109,
              "offset": 15442
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 377,
          "column": 1,
          "offset": 15334
        },
        "end": {
          "line": 377,
          "column": 109,
          "offset": 15442
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<Authentication />",
      "position": {
        "start": {
          "line": 379,
          "column": 1,
          "offset": 15444
        },
        "end": {
          "line": 379,
          "column": 19,
          "offset": 15462
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "TanStack Query ",
          "position": {
            "start": {
              "line": 381,
              "column": 4,
              "offset": 15467
            },
            "end": {
              "line": 381,
              "column": 19,
              "offset": 15482
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "QueryClient",
          "position": {
            "start": {
              "line": 381,
              "column": 19,
              "offset": 15482
            },
            "end": {
              "line": 381,
              "column": 32,
              "offset": 15495
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 381,
          "column": 1,
          "offset": 15464
        },
        "end": {
          "line": 381,
          "column": 32,
          "offset": 15495
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "tanstack-query-queryclient"
        },
        "id": "tanstack-query-queryclient"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"tanstack-query-queryclient\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "To modify the ",
          "position": {
            "start": {
              "line": 383,
              "column": 1,
              "offset": 15497
            },
            "end": {
              "line": 383,
              "column": 15,
              "offset": 15511
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "https://tanstack.com/query/latest/docs/react/reference/QueryClient",
          "children": [
            {
              "type": "inlineCode",
              "value": "QueryClient",
              "position": {
                "start": {
                  "line": 383,
                  "column": 16,
                  "offset": 15512
                },
                "end": {
                  "line": 383,
                  "column": 29,
                  "offset": 15525
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 383,
              "column": 15,
              "offset": 15511
            },
            "end": {
              "line": 383,
              "column": 98,
              "offset": 15594
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " instance, you can use the ",
          "position": {
            "start": {
              "line": 383,
              "column": 98,
              "offset": 15594
            },
            "end": {
              "line": 383,
              "column": 125,
              "offset": 15621
            },
            "indent": []
          }
        },
        {
          "type": "inlineCode",
          "value": "reactQuery",
          "position": {
            "start": {
              "line": 383,
              "column": 125,
              "offset": 15621
            },
            "end": {
              "line": 383,
              "column": 137,
              "offset": 15633
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " prop of the ",
          "position": {
            "start": {
              "line": 383,
              "column": 137,
              "offset": 15633
            },
            "end": {
              "line": 383,
              "column": 150,
              "offset": 15646
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "/docs/core/refine-component",
          "children": [
            {
              "type": "inlineCode",
              "value": "<Refine />",
              "position": {
                "start": {
                  "line": 383,
                  "column": 151,
                  "offset": 15647
                },
                "end": {
                  "line": 383,
                  "column": 163,
                  "offset": 15659
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 383,
              "column": 150,
              "offset": 15646
            },
            "end": {
              "line": 383,
              "column": 193,
              "offset": 15689
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " component.",
          "position": {
            "start": {
              "line": 383,
              "column": 193,
              "offset": 15689
            },
            "end": {
              "line": 383,
              "column": 204,
              "offset": 15700
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 383,
          "column": 1,
          "offset": 15497
        },
        "end": {
          "line": 383,
          "column": 204,
          "offset": 15700
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "inlineCode",
          "value": "dataProvider",
          "position": {
            "start": {
              "line": 385,
              "column": 4,
              "offset": 15705
            },
            "end": {
              "line": 385,
              "column": 18,
              "offset": 15719
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " interface",
          "position": {
            "start": {
              "line": 385,
              "column": 18,
              "offset": 15719
            },
            "end": {
              "line": 385,
              "column": 28,
              "offset": 15729
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 385,
          "column": 1,
          "offset": 15702
        },
        "end": {
          "line": 385,
          "column": 28,
          "offset": 15729
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "dataprovider-interface"
        },
        "id": "dataprovider-interface"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"dataprovider-interface\" >"
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "value": "To better understand the data provider interface, we have created an example that demonstrates how the required methods are implemented. For more comprehensive and diverse examples, you can refer to the ",
          "position": {
            "start": {
              "line": 387,
              "column": 1,
              "offset": 15731
            },
            "end": {
              "line": 387,
              "column": 204,
              "offset": 15934
            },
            "indent": []
          }
        },
        {
          "type": "link",
          "title": null,
          "url": "#supported-data-providers",
          "children": [
            {
              "type": "text",
              "value": "supported data providers",
              "position": {
                "start": {
                  "line": 387,
                  "column": 205,
                  "offset": 15935
                },
                "end": {
                  "line": 387,
                  "column": 229,
                  "offset": 15959
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 387,
              "column": 204,
              "offset": 15934
            },
            "end": {
              "line": 387,
              "column": 257,
              "offset": 15987
            },
            "indent": []
          }
        },
        {
          "type": "text",
          "value": " section.",
          "position": {
            "start": {
              "line": 387,
              "column": 257,
              "offset": 15987
            },
            "end": {
              "line": 387,
              "column": 266,
              "offset": 15996
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 387,
          "column": 1,
          "offset": 15731
        },
        "end": {
          "line": 387,
          "column": 266,
          "offset": 15996
        },
        "indent": []
      }
    },
    {
      "type": "blockquote",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In this example, we implemented data provider to support ",
              "position": {
                "start": {
                  "line": 389,
                  "column": 3,
                  "offset": 16000
                },
                "end": {
                  "line": 389,
                  "column": 60,
                  "offset": 16057
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://jsonplaceholder.typicode.com/",
              "children": [
                {
                  "type": "text",
                  "value": "JSON placeholder API",
                  "position": {
                    "start": {
                      "line": 389,
                      "column": 61,
                      "offset": 16058
                    },
                    "end": {
                      "line": 389,
                      "column": 81,
                      "offset": 16078
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 389,
                  "column": 60,
                  "offset": 16057
                },
                "end": {
                  "line": 389,
                  "column": 121,
                  "offset": 16118
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 389,
                  "column": 121,
                  "offset": 16118
                },
                "end": {
                  "line": 389,
                  "column": 122,
                  "offset": 16119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 389,
              "column": 3,
              "offset": 16000
            },
            "end": {
              "line": 389,
              "column": 122,
              "offset": 16119
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 389,
          "column": 1,
          "offset": 15998
        },
        "end": {
          "line": 389,
          "column": 122,
          "offset": 16119
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "<DataProviderInterface />",
      "position": {
        "start": {
          "line": 391,
          "column": 1,
          "offset": 16121
        },
        "end": {
          "line": 391,
          "column": 26,
          "offset": 16146
        },
        "indent": []
      }
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "link",
          "title": null,
          "url": "/docs/data/data-provider",
          "children": [
            {
              "type": "text",
              "value": "To learn more about the ",
              "position": {
                "start": {
                  "line": 393,
                  "column": 2,
                  "offset": 16149
                },
                "end": {
                  "line": 393,
                  "column": 26,
                  "offset": 16173
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "dataProvider",
              "position": {
                "start": {
                  "line": 393,
                  "column": 26,
                  "offset": 16173
                },
                "end": {
                  "line": 393,
                  "column": 40,
                  "offset": 16187
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " interface, check out the reference page.",
              "position": {
                "start": {
                  "line": 393,
                  "column": 40,
                  "offset": 16187
                },
                "end": {
                  "line": 393,
                  "column": 81,
                  "offset": 16228
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 393,
              "column": 1,
              "offset": 16148
            },
            "end": {
              "line": 393,
              "column": 108,
              "offset": 16255
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 393,
          "column": 1,
          "offset": 16148
        },
        "end": {
          "line": 393,
          "column": 108,
          "offset": 16255
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Supported data providers",
          "position": {
            "start": {
              "line": 395,
              "column": 4,
              "offset": 16260
            },
            "end": {
              "line": 395,
              "column": 28,
              "offset": 16284
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 395,
          "column": 1,
          "offset": 16257
        },
        "end": {
          "line": 395,
          "column": 28,
          "offset": 16284
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "supported-data-providers"
        },
        "id": "supported-data-providers"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"supported-data-providers\" >"
    },
    {
      "type": "jsx",
      "value": "<SupportedDataProviders/>",
      "position": {
        "start": {
          "line": 397,
          "column": 1,
          "offset": 16286
        },
        "end": {
          "line": 397,
          "column": 26,
          "offset": 16311
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    },
    {
      "type": "heading",
      "depth": 2,
      "children": [
        {
          "type": "text",
          "value": "Data hooks",
          "position": {
            "start": {
              "line": 399,
              "column": 4,
              "offset": 16316
            },
            "end": {
              "line": 399,
              "column": 14,
              "offset": 16326
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 399,
          "column": 1,
          "offset": 16313
        },
        "end": {
          "line": 399,
          "column": 14,
          "offset": 16326
        },
        "indent": []
      },
      "data": {
        "hProperties": {
          "id": "data-hooks"
        },
        "id": "data-hooks"
      }
    },
    {
      "type": "jsx",
      "value": "<DocThumbsUpDownFeedbackWidget id=\"data-hooks\" >"
    },
    {
      "type": "jsx",
      "value": "<DataHooks />",
      "position": {
        "start": {
          "line": 401,
          "column": 1,
          "offset": 16328
        },
        "end": {
          "line": 401,
          "column": 14,
          "offset": 16341
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "basekey",
      "label": "basekey",
      "title": null,
      "url": "/docs/core/interface-references#basekey",
      "position": {
        "start": {
          "line": 403,
          "column": 1,
          "offset": 16343
        },
        "end": {
          "line": 403,
          "column": 51,
          "offset": 16393
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "create-a-data-provider",
      "label": "create-a-data-provider",
      "title": null,
      "url": "/docs/data/data-provider",
      "position": {
        "start": {
          "line": 404,
          "column": 1,
          "offset": 16394
        },
        "end": {
          "line": 404,
          "column": 51,
          "offset": 16444
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "swizzle-a-data-provider",
      "label": "swizzle-a-data-provider",
      "title": null,
      "url": "/docs/packages/cli#swizzle",
      "position": {
        "start": {
          "line": 405,
          "column": 1,
          "offset": 16445
        },
        "end": {
          "line": 405,
          "column": 54,
          "offset": 16498
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "data-provider-tutorial",
      "label": "data-provider-tutorial",
      "title": null,
      "url": "/docs/data/data-provider",
      "position": {
        "start": {
          "line": 406,
          "column": 1,
          "offset": 16499
        },
        "end": {
          "line": 406,
          "column": 51,
          "offset": 16549
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-api-url",
      "label": "use-api-url",
      "title": null,
      "url": "/docs/data/hooks/use-api-url",
      "position": {
        "start": {
          "line": 407,
          "column": 1,
          "offset": 16550
        },
        "end": {
          "line": 407,
          "column": 44,
          "offset": 16593
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-create",
      "label": "use-create",
      "title": null,
      "url": "/docs/data/hooks/use-create",
      "position": {
        "start": {
          "line": 408,
          "column": 1,
          "offset": 16594
        },
        "end": {
          "line": 408,
          "column": 42,
          "offset": 16635
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-create-many",
      "label": "use-create-many",
      "title": null,
      "url": "/docs/data/hooks/use-create",
      "position": {
        "start": {
          "line": 409,
          "column": 1,
          "offset": 16636
        },
        "end": {
          "line": 409,
          "column": 47,
          "offset": 16682
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-custom",
      "label": "use-custom",
      "title": null,
      "url": "/docs/data/hooks/use-custom",
      "position": {
        "start": {
          "line": 410,
          "column": 1,
          "offset": 16683
        },
        "end": {
          "line": 410,
          "column": 42,
          "offset": 16724
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-delete",
      "label": "use-delete",
      "title": null,
      "url": "/docs/data/hooks/use-delete",
      "position": {
        "start": {
          "line": 411,
          "column": 1,
          "offset": 16725
        },
        "end": {
          "line": 411,
          "column": 42,
          "offset": 16766
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-delete-many",
      "label": "use-delete-many",
      "title": null,
      "url": "/docs/data/hooks/use-delete",
      "position": {
        "start": {
          "line": 412,
          "column": 1,
          "offset": 16767
        },
        "end": {
          "line": 412,
          "column": 47,
          "offset": 16813
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-list",
      "label": "use-list",
      "title": null,
      "url": "/docs/data/hooks/use-list",
      "position": {
        "start": {
          "line": 413,
          "column": 1,
          "offset": 16814
        },
        "end": {
          "line": 413,
          "column": 38,
          "offset": 16851
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-infinite-list",
      "label": "use-infinite-list",
      "title": null,
      "url": "/docs/data/hooks/use-infinite-list",
      "position": {
        "start": {
          "line": 414,
          "column": 1,
          "offset": 16852
        },
        "end": {
          "line": 414,
          "column": 56,
          "offset": 16907
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-many",
      "label": "use-many",
      "title": null,
      "url": "/docs/data/hooks/use-many",
      "position": {
        "start": {
          "line": 415,
          "column": 1,
          "offset": 16908
        },
        "end": {
          "line": 415,
          "column": 38,
          "offset": 16945
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-one",
      "label": "use-one",
      "title": null,
      "url": "/docs/data/hooks/use-one",
      "position": {
        "start": {
          "line": 416,
          "column": 1,
          "offset": 16946
        },
        "end": {
          "line": 416,
          "column": 36,
          "offset": 16981
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-update",
      "label": "use-update",
      "title": null,
      "url": "/docs/data/hooks/use-update",
      "position": {
        "start": {
          "line": 417,
          "column": 1,
          "offset": 16982
        },
        "end": {
          "line": 417,
          "column": 42,
          "offset": 17023
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-update-many",
      "label": "use-update-many",
      "title": null,
      "url": "/docs/data/hooks/use-update",
      "position": {
        "start": {
          "line": 418,
          "column": 1,
          "offset": 17024
        },
        "end": {
          "line": 418,
          "column": 47,
          "offset": 17070
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "crud-sorting",
      "label": "crud-sorting",
      "title": null,
      "url": "/docs/core/interface-references#crudsorting",
      "position": {
        "start": {
          "line": 419,
          "column": 1,
          "offset": 17071
        },
        "end": {
          "line": 419,
          "column": 60,
          "offset": 17130
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "crud-filters",
      "label": "crud-filters",
      "title": null,
      "url": "/docs/core/interface-references#crudfilters",
      "position": {
        "start": {
          "line": 420,
          "column": 1,
          "offset": 17131
        },
        "end": {
          "line": 420,
          "column": 60,
          "offset": 17190
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "pagination",
      "label": "pagination",
      "title": null,
      "url": "/docs/core/interface-references#pagination",
      "position": {
        "start": {
          "line": 421,
          "column": 1,
          "offset": 17191
        },
        "end": {
          "line": 421,
          "column": 57,
          "offset": 17247
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "http-error",
      "label": "http-error",
      "title": null,
      "url": "/docs/core/interface-references#httperror",
      "position": {
        "start": {
          "line": 422,
          "column": 1,
          "offset": 17248
        },
        "end": {
          "line": 422,
          "column": 56,
          "offset": 17303
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "meta-data",
      "label": "meta-data",
      "title": null,
      "url": "/docs/core/interface-references#metaquery",
      "position": {
        "start": {
          "line": 423,
          "column": 1,
          "offset": 17304
        },
        "end": {
          "line": 423,
          "column": 55,
          "offset": 17358
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "meta",
      "label": "meta",
      "title": null,
      "url": "/docs/core/interface-references#metaquery",
      "position": {
        "start": {
          "line": 424,
          "column": 1,
          "offset": 17359
        },
        "end": {
          "line": 424,
          "column": 50,
          "offset": 17408
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-login",
      "label": "use-login",
      "title": null,
      "url": "/docs/authentication/hooks/use-login",
      "position": {
        "start": {
          "line": 425,
          "column": 1,
          "offset": 17409
        },
        "end": {
          "line": 425,
          "column": 50,
          "offset": 17458
        },
        "indent": []
      }
    },
    {
      "type": "definition",
      "identifier": "use-register",
      "label": "use-register",
      "title": null,
      "url": "/docs/authentication/hooks/use-register",
      "position": {
        "start": {
          "line": 426,
          "column": 1,
          "offset": 17459
        },
        "end": {
          "line": 426,
          "column": 56,
          "offset": 17514
        },
        "indent": []
      }
    },
    {
      "type": "jsx",
      "value": "</DocThumbsUpDownFeedbackWidget>"
    }
  ],
  "position": {
    "start": {
      "line": 1,
      "column": 1,
      "offset": 0
    },
    "end": {
      "line": 426,
      "column": 56,
      "offset": 17514
    }
  }
}
